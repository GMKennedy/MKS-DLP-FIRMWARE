###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:59:36
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\WM\WM_SetTransState.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\WM\WM_SetTransState.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\WM_SetTransState.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\WM_SetTransState.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\WM\WM_SetTransState.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : WM_SetTransState.c
     16          Purpose     : Implementation of WM_SetTransState
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "WM_Intern.h"
     21          
     22          #if GUI_WINSUPPORT && WM_SUPPORT_TRANSPARENCY
     23          
     24          /*********************************************************************
     25          *
     26          *       Public code
     27          *
     28          **********************************************************************
     29          */
     30          

   \                                 In section .text, align 2, keep-with-next
     31          void WM_SetTransState(WM_HWIN hWin, unsigned State) {
   \                     WM_SetTransState: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460E             MOV      R6,R1
     32            WM_Obj *pWin;
     33            WM_LOCK();
     34            if (hWin) {
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD024             BEQ.N    ??WM_SetTransState_0
     35              pWin = WM_H2P(hWin);
   \   0000000A   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   0000000E   0x4605             MOV      R5,R0
     36              if (State & WM_CF_HASTRANS) {
   \   00000010   0x07F0             LSLS     R0,R6,#+31
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0xD502             BPL.N    ??WM_SetTransState_1
     37                WM_SetHasTrans(hWin);
   \   00000016   0x.... 0x....      BL       WM_SetHasTrans
   \   0000001A   0xE001             B.N      ??WM_SetTransState_2
     38              } else {
     39                WM_ClrHasTrans(hWin);
   \                     ??WM_SetTransState_1: (+1)
   \   0000001C   0x.... 0x....      BL       WM_ClrHasTrans
     40              }
     41              if (State & WM_CF_CONST_OUTLINE) {
   \                     ??WM_SetTransState_2: (+1)
   \   00000020   0x8BA8             LDRH     R0,[R5, #+28]
   \   00000022   0xF400 0x6100      AND      R1,R0,#0x800
   \   00000026   0x0532             LSLS     R2,R6,#+20
   \   00000028   0xD509             BPL.N    ??WM_SetTransState_3
     42                if (!(pWin->Status & WM_CF_CONST_OUTLINE)) {
   \   0000002A   0x2900             CMP      R1,#+0
   \   0000002C   0xD112             BNE.N    ??WM_SetTransState_0
     43                  pWin->Status |= WM_CF_CONST_OUTLINE;
   \   0000002E   0xF440 0x6000      ORR      R0,R0,#0x800
   \   00000032   0x83A8             STRH     R0,[R5, #+28]
     44                  WM_InvalidateWindow(hWin);
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000003A   0x.... 0x....      B.W      WM_InvalidateWindow
     45                }
     46              } else {
     47                if (pWin->Status & WM_CF_CONST_OUTLINE) {
   \                     ??WM_SetTransState_3: (+1)
   \   0000003E   0x2900             CMP      R1,#+0
   \   00000040   0xD008             BEQ.N    ??WM_SetTransState_0
     48                  pWin->Status &= ~WM_CF_CONST_OUTLINE;
   \   00000042   0xF24F 0x71FF      MOVW     R1,#+63487
   \   00000046   0x4008             ANDS     R0,R1,R0
   \   00000048   0x83A8             STRH     R0,[R5, #+28]
     49                  WM_InvalidateWindow(hWin);
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000050   0x.... 0x....      B.W      WM_InvalidateWindow
     50                }
     51              }
     52            }
     53            WM_UNLOCK();
     54          }
   \                     ??WM_SetTransState_0: (+1)
   \   00000054   0xBD70             POP      {R4-R6,PC}       ;; return
     55          
     56          #else
     57            void WM_SetTransState_c(void);
     58            void WM_SetTransState_c(void) {} /* avoid empty object files */
     59          #endif /* GUI_WINSUPPORT */
     60          
     61          /*************************** End of file ****************************/
     62          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   WM_SetTransState
        16   -> GUI_ALLOC_h2p
        16   -> WM_ClrHasTrans
         0   -> WM_InvalidateWindow
        16   -> WM_SetHasTrans


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      86  WM_SetTransState

 
 86 bytes in section .text
 
 86 bytes of CODE memory

Errors: none
Warnings: none
