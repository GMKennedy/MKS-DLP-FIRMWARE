###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:19:55
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Circle.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Circle.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUIDEMO_Circle.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUIDEMO_Circle.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Circle.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIDEMO_Circle.c
     16          Purpose     : Drawing circles
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "GUI.h"
     21          #include "GUIDEMO.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       GUIDEMO_Circle
     26          *
     27          **********************************************************************
     28          */
     29          

   \                                 In section .text, align 2, keep-with-next
     30          void GUIDEMO_Circle(void) {
   \                     GUIDEMO_Circle: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     31            int x0, y0, r;
     32            GUIDEMO_ShowIntro("Circles",
     33                              "\nArbitrary circles"
     34                              "\nand arcs.");
   \   00000002   0x.... 0x....      ADR.W    R1,`?<Constant "\\nArbitrary circles\\nan...">`
   \   00000006   0x.... 0x....      ADR.W    R0,`?<Constant "Circles">`
   \   0000000A   0x.... 0x....      BL       GUIDEMO_ShowIntro
     35            GUI_Clear();
   \   0000000E   0x.... 0x....      BL       GUI_Clear
     36            GUI_SetFont(&GUI_Font8x16);
   \   00000012   0x....             LDR.N    R0,??DataTable3
   \   00000014   0x.... 0x....      BL       GUI_SetFont
     37            GUI_SetColor(GUI_WHITE);
   \   00000018   0xF06F 0x407F      MVN      R0,#-16777216
   \   0000001C   0x.... 0x....      BL       GUI_SetColor
     38            x0 = LCD_XSIZE >> 1;
     39            y0 = LCD_YSIZE >> 1;
     40            #if GUIDEMO_LARGE
     41              r = 50;
     42              GUI_DispStringAt("Circle", 0, 0);
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0x4611             MOV      R1,R2
   \   00000024   0x.... 0x....      ADR.W    R0,`?<Constant "Circle">`
   \   00000028   0x.... 0x....      BL       GUI_DispStringAt
     43            #elif !(GUIDEMO_TINY)
     44              r = 40;
     45            #else
     46              #if (LCD_YSIZE < 80)
     47                r = 23;
     48              #else
     49                r = 30;
     50              #endif
     51            #endif
     52            GUI_FillCircle (x0, y0, r);
   \   0000002C   0x2232             MOVS     R2,#+50
   \   0000002E   0x21A0             MOVS     R1,#+160
   \   00000030   0x20F0             MOVS     R0,#+240
   \   00000032   0x.... 0x....      BL       GUI_FillCircle
     53            GUIDEMO_Wait();
   \   00000036   0x.... 0x....      BL       GUIDEMO_Wait
     54            GUI_SetDrawMode(GUI_DM_XOR);
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       GUI_SetDrawMode
     55            #if GUIDEMO_LARGE
     56              GUI_FillCircle (x0, y0, r + 10);
   \   00000040   0x223C             MOVS     R2,#+60
   \   00000042   0x21A0             MOVS     R1,#+160
   \   00000044   0x20F0             MOVS     R0,#+240
   \   00000046   0x.... 0x....      BL       GUI_FillCircle
     57            #elif !(GUIDEMO_TINY)
     58              GUI_FillCircle (x0, y0, r + 8);
     59            #else
     60              GUI_FillCircle (x0, y0, r + 6);
     61            #endif
     62            GUI_SetDrawMode(0);
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      BL       GUI_SetDrawMode
     63            GUIDEMO_Wait();
   \   00000050   0xE8BD 0x4001      POP      {R0,LR}
   \   00000054   0x.... 0x....      B.W      GUIDEMO_Wait
     64            #if GUI_SUPPORT_AA
     65              #if GUIDEMO_LARGE
     66                GUIDEMO_ShowInfo("Circles with\nAntialiasing");
     67              #endif
     68              GUI_Clear();
     69              GUI_SetColor(GUI_WHITE);
     70              #if GUIDEMO_LARGE
     71                GUI_DispStringAt("Antialiased\ncircle", 0, 0);
     72              #endif
     73              GUI_AA_FillCircle(x0, y0, r - 2);
     74              GUIDEMO_Wait();
     75            #endif
     76          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     GUI_Font8x16

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Circles">`:
   \   00000000   0x43 0x69          DC8 "Circles"
   \              0x72 0x63    
   \              0x6C 0x65    
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nArbitrary circles\\nan...">`:
   \   00000000   0x0A 0x41          DC8 "\012Arbitrary circles\012and arcs."
   \              0x72 0x62    
   \              0x69 0x74    
   \              0x72 0x61    
   \              0x72 0x79    
   \              0x20 0x63    
   \              0x69 0x72    
   \              0x63 0x6C    
   \              0x65 0x73    
   \              0x0A 0x61    
   \              0x6E 0x64    
   \              0x20 0x61    
   \              0x72 0x63    
   \              0x73 0x2E    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Circle">`:
   \   00000000   0x43 0x69          DC8 "Circle"
   \              0x72 0x63    
   \              0x6C 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GUIDEMO_Circle
         8   -> GUIDEMO_ShowIntro
         0   -> GUIDEMO_Wait
         8   -> GUIDEMO_Wait
         8   -> GUI_Clear
         8   -> GUI_DispStringAt
         8   -> GUI_FillCircle
         8   -> GUI_SetColor
         8   -> GUI_SetDrawMode
         8   -> GUI_SetFont


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "Circle">
       8  ?<Constant "Circles">
      32  ?<Constant "\nArbitrary circles\nan...">
       4  ??DataTable3
      88  GUIDEMO_Circle

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
