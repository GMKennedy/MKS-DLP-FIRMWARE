###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:14:47
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\fsmc.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\fsmc.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\fsmc.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\fsmc.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\fsmc.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : FSMC.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the FSMC peripheral.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          /* Includes ------------------------------------------------------------------*/
     45          #include "fsmc.h"
     46          
     47          #include "gpio.h"
     48          
     49          /* USER CODE BEGIN 0 */
     50          
     51          /* USER CODE END 0 */
     52          

   \                                 In section .bss, align 4
     53          SRAM_HandleTypeDef hsram1;
   \                     hsram1:
   \   00000000                      DS8 80
     54          
     55          /* FSMC initialization function */

   \                                 In section .text, align 2, keep-with-next
     56          void MX_FSMC_Init(void)
     57          {
   \                     MX_FSMC_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     58            FSMC_NORSRAM_TimingTypeDef Timing;
     59          
     60            /** Perform the SRAM1 memory initialization sequence
     61            */
     62            hsram1.Instance = FSMC_NORSRAM_DEVICE;
   \   00000004   0x....             LDR.N    R0,??DataTable2
   \   00000006   0xF04F 0x4120      MOV      R1,#-1610612736
   \   0000000A   0x6001             STR      R1,[R0, #+0]
     63            hsram1.Extended = FSMC_NORSRAM_EXTENDED_DEVICE;
   \   0000000C   0x....             LDR.N    R1,??DataTable2_1  ;; 0xa0000104
   \   0000000E   0x6041             STR      R1,[R0, #+4]
     64            /* hsram1.Init */
     65            hsram1.Init.NSBank = FSMC_NORSRAM_BANK4;
   \   00000010   0x2106             MOVS     R1,#+6
   \   00000012   0x6081             STR      R1,[R0, #+8]
     66            hsram1.Init.DataAddressMux = FSMC_DATA_ADDRESS_MUX_DISABLE;
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x60C1             STR      R1,[R0, #+12]
     67            hsram1.Init.MemoryType = FSMC_MEMORY_TYPE_SRAM;
   \   00000018   0x6101             STR      R1,[R0, #+16]
     68            hsram1.Init.MemoryDataWidth = FSMC_NORSRAM_MEM_BUS_WIDTH_16;
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x6141             STR      R1,[R0, #+20]
     69            hsram1.Init.BurstAccessMode = FSMC_BURST_ACCESS_MODE_DISABLE;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x6181             STR      R1,[R0, #+24]
     70            hsram1.Init.WaitSignalPolarity = FSMC_WAIT_SIGNAL_POLARITY_LOW;
   \   00000022   0x61C1             STR      R1,[R0, #+28]
     71            hsram1.Init.WrapMode = FSMC_WRAP_MODE_DISABLE;
   \   00000024   0x6201             STR      R1,[R0, #+32]
     72            hsram1.Init.WaitSignalActive = FSMC_WAIT_TIMING_BEFORE_WS;
   \   00000026   0x6241             STR      R1,[R0, #+36]
     73            hsram1.Init.WriteOperation = FSMC_WRITE_OPERATION_ENABLE;
   \   00000028   0xF44F 0x5180      MOV      R1,#+4096
   \   0000002C   0x6281             STR      R1,[R0, #+40]
     74            hsram1.Init.WaitSignal = FSMC_WAIT_SIGNAL_DISABLE;
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x62C1             STR      R1,[R0, #+44]
     75            hsram1.Init.ExtendedMode = FSMC_EXTENDED_MODE_DISABLE;
   \   00000032   0x6301             STR      R1,[R0, #+48]
     76            hsram1.Init.AsynchronousWait = FSMC_ASYNCHRONOUS_WAIT_DISABLE;
   \   00000034   0x6341             STR      R1,[R0, #+52]
     77            hsram1.Init.WriteBurst = FSMC_WRITE_BURST_DISABLE;
   \   00000036   0x6381             STR      R1,[R0, #+56]
     78            hsram1.Init.PageSize = FSMC_PAGE_SIZE_NONE;
   \   00000038   0x6441             STR      R1,[R0, #+68]
     79            /* Timing */
     80            Timing.AddressSetupTime = 15;
   \   0000003A   0x210F             MOVS     R1,#+15
   \   0000003C   0x9100             STR      R1,[SP, #+0]
     81            Timing.AddressHoldTime = 15;
   \   0000003E   0x9101             STR      R1,[SP, #+4]
     82            Timing.DataSetupTime = 255;
   \   00000040   0x21FF             MOVS     R1,#+255
   \   00000042   0x9102             STR      R1,[SP, #+8]
     83            Timing.BusTurnAroundDuration = 15;
   \   00000044   0x210F             MOVS     R1,#+15
   \   00000046   0x9103             STR      R1,[SP, #+12]
     84            Timing.CLKDivision = 16;
   \   00000048   0x2110             MOVS     R1,#+16
   \   0000004A   0x9104             STR      R1,[SP, #+16]
     85            Timing.DataLatency = 17;
   \   0000004C   0x2111             MOVS     R1,#+17
   \   0000004E   0x9105             STR      R1,[SP, #+20]
     86            Timing.AccessMode = FSMC_ACCESS_MODE_A;
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0x9106             STR      R1,[SP, #+24]
     87            /* ExtTiming */
     88          
     89            if (HAL_SRAM_Init(&hsram1, &Timing, NULL) != HAL_OK)
   \   00000054   0x460A             MOV      R2,R1
   \   00000056   0xA900             ADD      R1,SP,#+0
   \   00000058   0x.... 0x....      BL       HAL_SRAM_Init
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD001             BEQ.N    ??MX_FSMC_Init_0
     90            {
     91              Error_Handler();
   \   00000060   0x.... 0x....      BL       Error_Handler
     92            }
     93          
     94          }
   \                     ??MX_FSMC_Init_0: (+1)
   \   00000064   0xB007             ADD      SP,SP,#+28
   \   00000066   0xBD00             POP      {PC}             ;; return
     95          

   \                                 In section .bss, align 4
     96          static uint32_t FSMC_Initialized = 0;
   \                     FSMC_Initialized:
   \   00000000                      DS8 4
     97          

   \                                 In section .text, align 2, keep-with-next
     98          static void HAL_FSMC_MspInit(void){
     99            /* USER CODE BEGIN FSMC_MspInit 0 */
    100          
    101            /* USER CODE END FSMC_MspInit 0 */
    102            GPIO_InitTypeDef GPIO_InitStruct;
    103            if (FSMC_Initialized) {
   \                     HAL_FSMC_MspInit: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_2
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD000             BEQ.N    ??HAL_FSMC_MspInit_0
   \   00000008   0x4770             BX       LR
    104              return;
    105            }
    106            FSMC_Initialized = 1;
   \                     ??HAL_FSMC_MspInit_0: (+1)
   \   0000000A   0xB510             PUSH     {R4,LR}
   \   0000000C   0xB086             SUB      SP,SP,#+24
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x6001             STR      R1,[R0, #+0]
    107            /* Peripheral clock enable */
    108            __HAL_RCC_FSMC_CLK_ENABLE();
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9005             STR      R0,[SP, #+20]
   \   00000016   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40023838
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0xF041 0x0101      ORR      R1,R1,#0x1
   \   0000001E   0x6001             STR      R1,[R0, #+0]
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF000 0x0001      AND      R0,R0,#0x1
   \   00000026   0x9005             STR      R0,[SP, #+20]
   \   00000028   0x9805             LDR      R0,[SP, #+20]
    109            
    110            /** FSMC GPIO Configuration  
    111            PF12   ------> FSMC_A6
    112            PE7   ------> FSMC_D4
    113            PE8   ------> FSMC_D5
    114            PE9   ------> FSMC_D6
    115            PE10   ------> FSMC_D7
    116            PE11   ------> FSMC_D8
    117            PE12   ------> FSMC_D9
    118            PE13   ------> FSMC_D10
    119            PE14   ------> FSMC_D11
    120            PE15   ------> FSMC_D12
    121            PD8   ------> FSMC_D13
    122            PD9   ------> FSMC_D14
    123            PD10   ------> FSMC_D15
    124            PD14   ------> FSMC_D0
    125            PD15   ------> FSMC_D1
    126            PD0   ------> FSMC_D2
    127            PD1   ------> FSMC_D3
    128            PD4   ------> FSMC_NOE
    129            PD5   ------> FSMC_NWE
    130            PG12   ------> FSMC_NE4
    131            */
    132            /* GPIO_InitStruct */
    133            GPIO_InitStruct.Pin = GPIO_PIN_12;
   \   0000002A   0xF44F 0x5480      MOV      R4,#+4096
   \   0000002E   0x9400             STR      R4,[SP, #+0]
    134            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x9001             STR      R0,[SP, #+4]
    135            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x9002             STR      R0,[SP, #+8]
    136            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000038   0x2003             MOVS     R0,#+3
   \   0000003A   0x9003             STR      R0,[SP, #+12]
    137            GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
   \   0000003C   0x200C             MOVS     R0,#+12
   \   0000003E   0x9004             STR      R0,[SP, #+16]
    138          
    139            HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40021400
   \   00000044   0x.... 0x....      BL       HAL_GPIO_Init
    140          
    141            /* GPIO_InitStruct */
    142            GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
    143                                    |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
    144                                    |GPIO_PIN_15;
   \   00000048   0xF64F 0x7080      MOVW     R0,#+65408
   \   0000004C   0x9000             STR      R0,[SP, #+0]
    145            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000004E   0x2002             MOVS     R0,#+2
   \   00000050   0x9001             STR      R0,[SP, #+4]
    146            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x9002             STR      R0,[SP, #+8]
    147            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000056   0x2003             MOVS     R0,#+3
   \   00000058   0x9003             STR      R0,[SP, #+12]
    148            GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
   \   0000005A   0x200C             MOVS     R0,#+12
   \   0000005C   0x9004             STR      R0,[SP, #+16]
    149          
    150            HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
   \   0000005E   0xA900             ADD      R1,SP,#+0
   \   00000060   0x....             LDR.N    R0,??DataTable2_5  ;; 0x40021000
   \   00000062   0x.... 0x....      BL       HAL_GPIO_Init
    151          
    152            /* GPIO_InitStruct */
    153            GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
    154                                    |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4 
    155                                    |GPIO_PIN_5;
   \   00000066   0xF24C 0x7033      MOVW     R0,#+50995
   \   0000006A   0x9000             STR      R0,[SP, #+0]
    156            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x9001             STR      R0,[SP, #+4]
    157            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x9002             STR      R0,[SP, #+8]
    158            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000074   0x2003             MOVS     R0,#+3
   \   00000076   0x9003             STR      R0,[SP, #+12]
    159            GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
   \   00000078   0x200C             MOVS     R0,#+12
   \   0000007A   0x9004             STR      R0,[SP, #+16]
    160          
    161            HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \   0000007C   0xA900             ADD      R1,SP,#+0
   \   0000007E   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40020c00
   \   00000080   0x.... 0x....      BL       HAL_GPIO_Init
    162          
    163            /* GPIO_InitStruct */
    164            GPIO_InitStruct.Pin = GPIO_PIN_12;
   \   00000084   0x9400             STR      R4,[SP, #+0]
    165            GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0x9001             STR      R0,[SP, #+4]
    166            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x9002             STR      R0,[SP, #+8]
    167            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   0000008E   0x2003             MOVS     R0,#+3
   \   00000090   0x9003             STR      R0,[SP, #+12]
    168            GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
   \   00000092   0x200C             MOVS     R0,#+12
   \   00000094   0x9004             STR      R0,[SP, #+16]
    169          
    170            HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
   \   00000096   0xA900             ADD      R1,SP,#+0
   \   00000098   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40021800
   \   0000009A   0x.... 0x....      BL       HAL_GPIO_Init
    171          
    172            /* USER CODE BEGIN FSMC_MspInit 1 */
    173          
    174            /* USER CODE END FSMC_MspInit 1 */
    175          }
   \   0000009E   0xB006             ADD      SP,SP,#+24
   \   000000A0   0xBD10             POP      {R4,PC}          ;; return
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void HAL_SRAM_MspInit(SRAM_HandleTypeDef* sramHandle){
    178            /* USER CODE BEGIN SRAM_MspInit 0 */
    179          
    180            /* USER CODE END SRAM_MspInit 0 */
    181            HAL_FSMC_MspInit();
   \                     HAL_SRAM_MspInit: (+1)
   \   00000000   0x....             B.N      HAL_FSMC_MspInit
    182            /* USER CODE BEGIN SRAM_MspInit 1 */
    183          
    184            /* USER CODE END SRAM_MspInit 1 */
    185          }
    186          

   \                                 In section .bss, align 4
    187          static uint32_t FSMC_DeInitialized = 0;
   \                     FSMC_DeInitialized:
   \   00000000                      DS8 4
    188          

   \                                 In section .text, align 2, keep-with-next
    189          static void HAL_FSMC_MspDeInit(void){
   \                     HAL_FSMC_MspDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    190            /* USER CODE BEGIN FSMC_MspDeInit 0 */
    191          
    192            /* USER CODE END FSMC_MspDeInit 0 */
    193            if (FSMC_DeInitialized) {
   \   00000002   0x....             LDR.N    R0,??DataTable2_8
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD11C             BNE.N    ??HAL_FSMC_MspDeInit_0
    194              return;
    195            }
    196            FSMC_DeInitialized = 1;
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x6001             STR      R1,[R0, #+0]
    197            /* Peripheral clock enable */
    198            __HAL_RCC_FSMC_CLK_DISABLE();
   \   0000000E   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40023838
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0x0849             LSRS     R1,R1,#+1
   \   00000014   0x0049             LSLS     R1,R1,#+1
   \   00000016   0x6001             STR      R1,[R0, #+0]
    199            
    200            /** FSMC GPIO Configuration  
    201            PF12   ------> FSMC_A6
    202            PE7   ------> FSMC_D4
    203            PE8   ------> FSMC_D5
    204            PE9   ------> FSMC_D6
    205            PE10   ------> FSMC_D7
    206            PE11   ------> FSMC_D8
    207            PE12   ------> FSMC_D9
    208            PE13   ------> FSMC_D10
    209            PE14   ------> FSMC_D11
    210            PE15   ------> FSMC_D12
    211            PD8   ------> FSMC_D13
    212            PD9   ------> FSMC_D14
    213            PD10   ------> FSMC_D15
    214            PD14   ------> FSMC_D0
    215            PD15   ------> FSMC_D1
    216            PD0   ------> FSMC_D2
    217            PD1   ------> FSMC_D3
    218            PD4   ------> FSMC_NOE
    219            PD5   ------> FSMC_NWE
    220            PG12   ------> FSMC_NE4
    221            */
    222          
    223            HAL_GPIO_DeInit(GPIOF, GPIO_PIN_12);
   \   00000018   0xF44F 0x5180      MOV      R1,#+4096
   \   0000001C   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40021400
   \   0000001E   0x.... 0x....      BL       HAL_GPIO_DeInit
    224          
    225            HAL_GPIO_DeInit(GPIOE, GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
    226                                    |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
    227                                    |GPIO_PIN_15);
   \   00000022   0xF64F 0x7180      MOVW     R1,#+65408
   \   00000026   0x....             LDR.N    R0,??DataTable2_5  ;; 0x40021000
   \   00000028   0x.... 0x....      BL       HAL_GPIO_DeInit
    228          
    229            HAL_GPIO_DeInit(GPIOD, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
    230                                    |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4 
    231                                    |GPIO_PIN_5);
   \   0000002C   0xF24C 0x7133      MOVW     R1,#+50995
   \   00000030   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40020c00
   \   00000032   0x.... 0x....      BL       HAL_GPIO_DeInit
    232          
    233            HAL_GPIO_DeInit(GPIOG, GPIO_PIN_12);
   \   00000036   0xF44F 0x5180      MOV      R1,#+4096
   \   0000003A   0x....             LDR.N    R0,??DataTable2_7  ;; 0x40021800
   \   0000003C   0xE8BD 0x4004      POP      {R2,LR}
   \   00000040   0x.... 0x....      B.W      HAL_GPIO_DeInit
   \                     ??HAL_FSMC_MspDeInit_0: (+1)
   \   00000044   0xBD01             POP      {R0,PC}          ;; return
    234          
    235            /* USER CODE BEGIN FSMC_MspDeInit 1 */
    236          
    237            /* USER CODE END FSMC_MspDeInit 1 */
    238          }
    239          

   \                                 In section .text, align 2, keep-with-next
    240          void HAL_SRAM_MspDeInit(SRAM_HandleTypeDef* sramHandle){
    241            /* USER CODE BEGIN SRAM_MspDeInit 0 */
    242          
    243            /* USER CODE END SRAM_MspDeInit 0 */
    244            HAL_FSMC_MspDeInit();
   \                     HAL_SRAM_MspDeInit: (+1)
   \   00000000   0x....             B.N      HAL_FSMC_MspDeInit
    245            /* USER CODE BEGIN SRAM_MspDeInit 1 */
    246          
    247            /* USER CODE END SRAM_MspDeInit 1 */
    248          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     hsram1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0xA0000104         DC32     0xa0000104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     FSMC_Initialized

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40023838         DC32     0x40023838

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40021400         DC32     0x40021400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40021000         DC32     0x40021000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x40021800         DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     FSMC_DeInitialized
    249          /**
    250            * @}
    251            */
    252          
    253          /**
    254            * @}
    255            */
    256          
    257          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HAL_FSMC_MspDeInit
         0   -> HAL_GPIO_DeInit
         8   -> HAL_GPIO_DeInit
      32   HAL_FSMC_MspInit
        32   -> HAL_GPIO_Init
       0   HAL_SRAM_MspDeInit
         0   -> HAL_FSMC_MspDeInit
       0   HAL_SRAM_MspInit
         0   -> HAL_FSMC_MspInit
      32   MX_FSMC_Init
        32   -> Error_Handler
        32   -> HAL_SRAM_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  FSMC_DeInitialized
       4  FSMC_Initialized
      70  HAL_FSMC_MspDeInit
     162  HAL_FSMC_MspInit
       2  HAL_SRAM_MspDeInit
       2  HAL_SRAM_MspInit
     104  MX_FSMC_Init
      80  hsram1

 
  88 bytes in section .bss
 376 bytes in section .text
 
 376 bytes of CODE memory
  88 bytes of DATA memory

Errors: none
Warnings: none
