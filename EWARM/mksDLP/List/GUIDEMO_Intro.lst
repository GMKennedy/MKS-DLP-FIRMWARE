###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:19:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Intro.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Intro.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUIDEMO_Intro.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUIDEMO_Intro.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_Intro.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIDEMO_Intro.c
     16          Purpose     : Introduction for emWin generic demo
     17                        (This is also a good file to demo and explain basic
     18                        emWin features by setting breakpoints)
     19          ----------------------------------------------------------------------
     20          */
     21          
     22          #include "GUI.h"
     23          #include "GUIDEMO.h"
     24          #include <string.h>
     25          
     26          /*********************************************************************
     27          *
     28          *       GUIDEMO_Intro
     29          *
     30          **********************************************************************
     31          */
     32          
     33          #if GUIDEMO_LARGE
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void GUIDEMO_Intro(void) {
   \                     GUIDEMO_Intro: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08E             SUB      SP,SP,#+56
     36            int xCenter = LCD_XSIZE >> 1;
     37            int y, yPos;
     38            char acText[50] = "Version of emWin: ";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      ADR.W    R1,`?<Constant "Version of emWin: ">`
   \   0000000A   0x2234             MOVS     R2,#+52
   \   0000000C   0x.... 0x....      BL       __aeabi_memcpy4
     39            strcat(acText, GUI_GetVersionString());
   \   00000010   0x.... 0x....      BL       GUI_GetVersionString
   \   00000014   0x4601             MOV      R1,R0
   \   00000016   0xA800             ADD      R0,SP,#+0
   \   00000018   0x.... 0x....      BL       strcat
     40            GUIDEMO_SetBkColor(GUI_BLUE);
   \   0000001C   0xF44F 0x007F      MOV      R0,#+16711680
   \   00000020   0x.... 0x....      BL       GUIDEMO_SetBkColor
     41            GUIDEMO_SetColor(GUI_WHITE);
   \   00000024   0xF06F 0x447F      MVN      R4,#-16777216
   \   00000028   0x4620             MOV      R0,R4
   \   0000002A   0x.... 0x....      BL       GUIDEMO_SetColor
     42            GUI_Clear();
   \   0000002E   0x.... 0x....      BL       GUI_Clear
     43            GUI_SetFont(&GUI_FontComic18B_ASCII);
   \   00000032   0x....             LDR.N    R5,??DataTable9
   \   00000034   0x4628             MOV      R0,R5
   \   00000036   0x.... 0x....      BL       GUI_SetFont
     44            GUI_DispStringHCenterAt("emWin", xCenter, y = 12);
   \   0000003A   0x220C             MOVS     R2,#+12
   \   0000003C   0x21F0             MOVS     R1,#+240
   \   0000003E   0x.... 0x....      ADR.W    R0,`?<Constant "emWin">`
   \   00000042   0x.... 0x....      BL       GUI_DispStringHCenterAt
     45            GUI_SetFont(&GUI_Font13H_ASCII);
   \   00000046   0x....             LDR.N    R0,??DataTable9_1
   \   00000048   0x.... 0x....      BL       GUI_SetFont
     46            GUI_DispStringHCenterAt("Universal graphic software"
     47                                    "\nfor embedded applications"
     48                                    , xCenter, y += 23);
   \   0000004C   0x2223             MOVS     R2,#+35
   \   0000004E   0x21F0             MOVS     R1,#+240
   \   00000050   0x.... 0x....      ADR.W    R0,`?<Constant "Universal graphic sof...">`
   \   00000054   0x.... 0x....      BL       GUI_DispStringHCenterAt
     49            GUI_SetColor(GUI_RED);
   \   00000058   0x20FF             MOVS     R0,#+255
   \   0000005A   0x.... 0x....      BL       GUI_SetColor
     50            GUI_SetFont(&GUI_Font16_ASCII);
   \   0000005E   0x....             LDR.N    R0,??DataTable9_2
   \   00000060   0x.... 0x....      BL       GUI_SetFont
     51            GUI_DispStringHCenterAt("Any CPU - Any LCD - Any Application"
     52                                    , xCenter, y += 32);
   \   00000064   0x2243             MOVS     R2,#+67
   \   00000066   0x21F0             MOVS     R1,#+240
   \   00000068   0x.... 0x....      ADR.W    R0,`?<Constant "Any CPU - Any LCD - A...">`
   \   0000006C   0x.... 0x....      BL       GUI_DispStringHCenterAt
     53            GUI_SetFont(&GUI_Font10S_ASCII);
   \   00000070   0x....             LDR.N    R6,??DataTable9_3
   \   00000072   0x4630             MOV      R0,R6
   \   00000074   0x.... 0x....      BL       GUI_SetFont
     54            GUI_DispStringHCenterAt("Compiled " __DATE__ " "__TIME__, xCenter, y += 18);
   \   00000078   0x2255             MOVS     R2,#+85
   \   0000007A   0x21F0             MOVS     R1,#+240
   \   0000007C   0x.... 0x....      ADR.W    R0,`?<Constant "Compiled Jul 18 2019 ...">`
   \   00000080   0x.... 0x....      BL       GUI_DispStringHCenterAt
     55            GUI_SetFont(&GUI_Font13HB_ASCII);
   \   00000084   0x....             LDR.N    R0,??DataTable9_4
   \   00000086   0x.... 0x....      BL       GUI_SetFont
     56            GUI_SetColor(GUI_WHITE);
   \   0000008A   0x4620             MOV      R0,R4
   \   0000008C   0x.... 0x....      BL       GUI_SetColor
     57            GUI_DispStringHCenterAt(acText, xCenter, y += 15);
   \   00000090   0x2264             MOVS     R2,#+100
   \   00000092   0x21F0             MOVS     R1,#+240
   \   00000094   0xA800             ADD      R0,SP,#+0
   \   00000096   0x.... 0x....      BL       GUI_DispStringHCenterAt
     58            GUI_SetFont(&GUI_FontComic18B_ASCII);
   \   0000009A   0x4628             MOV      R0,R5
   \   0000009C   0x.... 0x....      BL       GUI_SetFont
     59            GUI_SetColor(GUI_WHITE);
   \   000000A0   0x4620             MOV      R0,R4
   \   000000A2   0x.... 0x....      BL       GUI_SetColor
     60            GUI_DispStringHCenterAt("www.segger.com", LCD_XSIZE >> 1, LCD_YSIZE - 20);
   \   000000A6   0xF44F 0x7296      MOV      R2,#+300
   \   000000AA   0x21F0             MOVS     R1,#+240
   \   000000AC   0x.... 0x....      ADR.W    R0,`?<Constant "www.segger.com">`
   \   000000B0   0x.... 0x....      BL       GUI_DispStringHCenterAt
     61            yPos  = y + 15 + ((LCD_YSIZE - y - 33) >> 1);
     62            yPos -= bmSeggerLogoBlue.YSize >> 1;
   \   000000B4   0x....             LDR.N    R0,??DataTable9_5
   \   000000B6   0x8841             LDRH     R1,[R0, #+2]
   \   000000B8   0x0849             LSRS     R1,R1,#+1
   \   000000BA   0xF1C1 0x02D0      RSB      R2,R1,#+208
     63            if (yPos > 160) {
   \   000000BE   0x2AA1             CMP      R2,#+161
   \   000000C0   0xDB00             BLT.N    ??GUIDEMO_Intro_0
     64              yPos = 160;
   \   000000C2   0x22A0             MOVS     R2,#+160
     65            }
     66            GUI_DrawBitmap(&bmSeggerLogoBlue, (LCD_XSIZE - bmSeggerLogoBlue.XSize) >> 1, yPos);
   \                     ??GUIDEMO_Intro_0: (+1)
   \   000000C4   0x8801             LDRH     R1,[R0, #+0]
   \   000000C6   0xF5C1 0x71F0      RSB      R1,R1,#+480
   \   000000CA   0x1049             ASRS     R1,R1,#+1
   \   000000CC   0x.... 0x....      BL       GUI_DrawBitmap
     67            #if (LCD_YSIZE >= 220)
     68              GUI_SetFont(&GUI_Font10S_ASCII);
   \   000000D0   0x4630             MOV      R0,R6
   \   000000D2   0x.... 0x....      BL       GUI_SetFont
     69              GUI_DispStringAt("GUI_OS: ", 0, LCD_YSIZE - 30); GUI_DispDecMin(GUI_OS);
   \   000000D6   0xF44F 0x7291      MOV      R2,#+290
   \   000000DA   0x2100             MOVS     R1,#+0
   \   000000DC   0x.... 0x....      ADR.W    R0,`?<Constant "GUI_OS: ">`
   \   000000E0   0x.... 0x....      BL       GUI_DispStringAt
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      BL       GUI_DispDecMin
     70              GUI_DispStringAt("GUI_ALLOC_SIZE: ",0, LCD_YSIZE - 20); GUI_DispDecMin(GUI_ALLOC_SIZE);
   \   000000EA   0xF44F 0x7296      MOV      R2,#+300
   \   000000EE   0x2100             MOVS     R1,#+0
   \   000000F0   0x.... 0x....      ADR.W    R0,`?<Constant "GUI_ALLOC_SIZE: ">`
   \   000000F4   0x.... 0x....      BL       GUI_DispStringAt
   \   000000F8   0xF44F 0x50C0      MOV      R0,#+6144
   \   000000FC   0x.... 0x....      BL       GUI_DispDecMin
     71              GUI_DispStringAt("Compiler: "
     72              #ifdef _MSC_VER
     73                "Microsoft"
     74              #elif defined (NC308)
     75                "Mitsubishi NC308"
     76              #elif defined (NC30)
     77                "Mitsubishi NC30"
     78              #elif defined (__TID__)
     79                #if (((__TID__ >>8) &0x7f) == 48)            /* IAR MC80 */
     80                  "IAR M32C"
     81                #elif (((__TID__ >>8) &0x7f) == 85)          /* IAR V850 */
     82                  "IAR V850"
     83                #elif defined (__ICCARM__)                   /* IAR ARM  */
     84                  "IAR ARM"
     85                #else                                        /* IAR MC16 */
     86                  "IAR M32C"
     87                #endif
     88              #elif defined __WATCOMC__                      /* WATCOM */
     89                  "WATCOM"
     90              #elif defined __GNUC__
     91                  "GNU"
     92              #else
     93                "Unknown"
     94              #endif
     95                ,0, LCD_YSIZE - 10);
   \   00000100   0xF44F 0x729B      MOV      R2,#+310
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x.... 0x....      ADR.W    R0,`?<Constant "Compiler: IAR ARM">`
   \   0000010A   0x.... 0x....      BL       GUI_DispStringAt
     96            #endif
     97            GUIDEMO_Delay(5000);
   \   0000010E   0xF241 0x3088      MOVW     R0,#+5000
   \   00000112   0x.... 0x....      BL       GUIDEMO_Delay
     98            GUIDEMO_NotifyStartNext();
   \   00000116   0x.... 0x....      BL       GUIDEMO_NotifyStartNext
     99          }
   \   0000011A   0xB00E             ADD      SP,SP,#+56
   \   0000011C   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     GUI_FontComic18B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     GUI_Font13H_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     GUI_Font16_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     GUI_Font10S_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     GUI_Font13HB_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     bmSeggerLogoBlue

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Version of emWin: ">`:
   \   00000000   0x56 0x65          DC8 "Version of emWin: "
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6F 0x66    
   \              0x20 0x65    
   \              0x6D 0x57    
   \              0x69 0x6E    
   \              0x3A 0x20    
   \              0x00         
   \   00000013   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000023   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "emWin">`:
   \   00000000   0x65 0x6D          DC8 "emWin"
   \              0x57 0x69    
   \              0x6E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Universal graphic sof...">`:
   \   00000000   0x55 0x6E          DC8 55H, 6EH, 69H, 76H, 65H, 72H, 73H, 61H
   \              0x69 0x76    
   \              0x65 0x72    
   \              0x73 0x61    
   \   00000008   0x6C 0x20          DC8 6CH, 20H, 67H, 72H, 61H, 70H, 68H, 69H
   \              0x67 0x72    
   \              0x61 0x70    
   \              0x68 0x69    
   \   00000010   0x63 0x20          DC8 63H, 20H, 73H, 6FH, 66H, 74H, 77H, 61H
   \              0x73 0x6F    
   \              0x66 0x74    
   \              0x77 0x61    
   \   00000018   0x72 0x65          DC8 72H, 65H, 0AH, 66H, 6FH, 72H, 20H, 65H
   \              0x0A 0x66    
   \              0x6F 0x72    
   \              0x20 0x65    
   \   00000020   0x6D 0x62          DC8 6DH, 62H, 65H, 64H, 64H, 65H, 64H, 20H
   \              0x65 0x64    
   \              0x64 0x65    
   \              0x64 0x20    
   \   00000028   0x61 0x70          DC8 61H, 70H, 70H, 6CH, 69H, 63H, 61H, 74H
   \              0x70 0x6C    
   \              0x69 0x63    
   \              0x61 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 73H, 0
   \              0x6E 0x73    
   \              0x00         
   \   00000035   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Any CPU - Any LCD - A...">`:
   \   00000000   0x41 0x6E          DC8 "Any CPU - Any LCD - Any Application"
   \              0x79 0x20    
   \              0x43 0x50    
   \              0x55 0x20    
   \              0x2D 0x20    
   \              0x41 0x6E    
   \              0x79 0x20    
   \              0x4C 0x43    
   \              0x44 0x20    
   \              0x2D 0x20    
   \              0x41 0x6E    
   \              0x79 0x20    
   \              0x41 0x70    
   \              0x70 0x6C    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Compiled Jul 18 2019 ...">`:
   \   00000000   0x43 0x6F          DC8 "Compiled Jul 18 2019 10:19:56"
   \              0x6D 0x70    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x20 0x4A    
   \              0x75 0x6C    
   \              0x20 0x31    
   \              0x38 0x20    
   \              0x32 0x30    
   \              0x31 0x39    
   \              0x20 0x31    
   \              0x30 0x3A    
   \              0x31 0x39    
   \              0x3A 0x35    
   \              0x36 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "www.segger.com">`:
   \   00000000   0x77 0x77          DC8 "www.segger.com"
   \              0x77 0x2E    
   \              0x73 0x65    
   \              0x67 0x67    
   \              0x65 0x72    
   \              0x2E 0x63    
   \              0x6F 0x6D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GUI_OS: ">`:
   \   00000000   0x47 0x55          DC8 "GUI_OS: "
   \              0x49 0x5F    
   \              0x4F 0x53    
   \              0x3A 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GUI_ALLOC_SIZE: ">`:
   \   00000000   0x47 0x55          DC8 "GUI_ALLOC_SIZE: "
   \              0x49 0x5F    
   \              0x41 0x4C    
   \              0x4C 0x4F    
   \              0x43 0x5F    
   \              0x53 0x49    
   \              0x5A 0x45    
   \              0x3A 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Compiler: IAR ARM">`:
   \   00000000   0x43 0x6F          DC8 "Compiler: IAR ARM"
   \              0x6D 0x70    
   \              0x69 0x6C    
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x49 0x41    
   \              0x52 0x20    
   \              0x41 0x52    
   \              0x4D 0x00    
   \   00000012   0x00 0x00          DC8 0, 0
    100          
    101          #else /* GUIDEMO_LARGE */
    102          
    103          void GUIDEMO_Intro(void) {
    104            #if GUIDEMO_TINY
    105              char acText[20] = "Version: ";
    106            #else
    107              char acText[32] = "Version of emWin: ";
    108            #endif
    109            int xCenter, dy, y0 = 0;
    110            xCenter = LCD_XSIZE >> 1;
    111            #if (LCD_YSIZE < 72)
    112              dy = 0;
    113            #else
    114              dy = ((LCD_YSIZE - 72) >> 3);
    115              if (dy > 14) dy = 14;
    116            #endif
    117            strcat(acText, GUI_GetVersionString());
    118            /* Clear the background */
    119            GUIDEMO_SetBkColor(GUI_BLUE);
    120            GUIDEMO_SetColor(GUI_WHITE);
    121            GUI_Clear();
    122            /* Display headline */
    123            GUI_SetFont(&GUI_Font13B_ASCII);
    124            GUI_DispStringHCenterAt("emWin", xCenter, dy + 1);
    125            /* Display description */
    126            #if (LCD_XSIZE < 140)
    127              GUI_SetFont(&GUI_Font8_ASCII);
    128            #else
    129              GUI_SetFont(&GUI_Font10_ASCII);
    130            #endif
    131            GUI_DispStringHCenterAt("Universal graphic software\n"
    132                                    "for embedded applications", xCenter, 2 * dy + 18);
    133            /* Display compile time */
    134            GUI_SetFont(&GUI_Font10S_ASCII);
    135            GUI_DispStringHCenterAt("Compiled " __DATE__ " "__TIME__, xCenter, 3 * dy + 37);
    136            /* Display version number */
    137            #if (LCD_YSIZE < 80)
    138              GUI_DispStringAt(acText, 6, LCD_YSIZE - 13);
    139            #else
    140              GUI_DispStringHCenterAt(acText, xCenter, 4 * dy + 49);
    141            #endif
    142            GUIDEMO_Delay(5000);
    143            GUIDEMO_NotifyStartNext();
    144            /* Show SEGGER logo */
    145            GUI_Clear();
    146            #if GUIDEMO_TINY
    147              y0 = 2;
    148            #endif
    149            #if (LCD_YSIZE >= 90)
    150              y0 += (LCD_YSIZE - 90) >> 1;
    151            #endif
    152            GUI_DrawBitmap(&bmSeggerLogoBlue, xCenter - (bmSeggerLogoBlue.XSize >> 1), y0);
    153            /* Display URL */
    154            #if (LCD_YSIZE < 80)
    155              GUI_SetFont(&GUI_Font10_ASCII);
    156            #else
    157              GUI_SetFont(&GUI_Font13B_ASCII);
    158            #endif
    159            y0 += bmSeggerLogoBlue.YSize + 1;
    160            GUI_DispStringHCenterAt("www.segger.com", xCenter, y0);
    161            GUIDEMO_Delay(5000);
    162            GUIDEMO_NotifyStartNext();
    163          }
    164          
    165          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   GUIDEMO_Intro
        72   -> GUIDEMO_Delay
        72   -> GUIDEMO_NotifyStartNext
        72   -> GUIDEMO_SetBkColor
        72   -> GUIDEMO_SetColor
        72   -> GUI_Clear
        72   -> GUI_DispDecMin
        72   -> GUI_DispStringAt
        72   -> GUI_DispStringHCenterAt
        72   -> GUI_DrawBitmap
        72   -> GUI_GetVersionString
        72   -> GUI_SetColor
        72   -> GUI_SetFont
        72   -> __aeabi_memcpy4
        72   -> strcat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ?<Constant "Any CPU - Any LCD - A...">
      32  ?<Constant "Compiled Jul 18 2019 ...">
      20  ?<Constant "Compiler: IAR ARM">
      20  ?<Constant "GUI_ALLOC_SIZE: ">
      12  ?<Constant "GUI_OS: ">
      56  ?<Constant "Universal graphic sof...">
      52  ?<Constant "Version of emWin: ">
       8  ?<Constant "emWin">
      16  ?<Constant "www.segger.com">
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
     286  GUIDEMO_Intro

 
 562 bytes in section .text
 
 562 bytes of CODE memory

Errors: none
Warnings: none
