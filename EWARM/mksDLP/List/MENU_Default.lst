###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:59:15
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Default.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Default.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\MENU_Default.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\MENU_Default.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Default.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : MENU_Default.c
     16          Purpose     : Implementation of menu widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "MENU.h"
     21          #include "MENU_Private.h"
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code, set defaults
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       MENU_SetDefaultTextColor
     34          */

   \                                 In section .text, align 2, keep-with-next
     35          void MENU_SetDefaultTextColor(unsigned ColorIndex, GUI_COLOR Color) {
     36            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aTextColor)) {
   \                     MENU_SetDefaultTextColor: (+1)
   \   00000000   0x2806             CMP      R0,#+6
   \   00000002   0xD202             BCS.N    ??MENU_SetDefaultTextColor_0
     37              MENU__DefaultProps.aTextColor[ColorIndex] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable9
   \   00000006   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
     38            }
     39          }
   \                     ??MENU_SetDefaultTextColor_0: (+1)
   \   0000000A   0x4770             BX       LR               ;; return
     40          
     41          /*********************************************************************
     42          *
     43          *       MENU_SetDefaultBkColor
     44          */

   \                                 In section .text, align 2, keep-with-next
     45          void MENU_SetDefaultBkColor(unsigned ColorIndex, GUI_COLOR Color) {
     46            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aBkColor)) {
   \                     MENU_SetDefaultBkColor: (+1)
   \   00000000   0x2806             CMP      R0,#+6
   \   00000002   0xD203             BCS.N    ??MENU_SetDefaultBkColor_0
     47              MENU__DefaultProps.aBkColor[ColorIndex] = Color;
   \   00000004   0x....             LDR.N    R2,??DataTable9
   \   00000006   0xEB02 0x0080      ADD      R0,R2,R0, LSL #+2
   \   0000000A   0x6141             STR      R1,[R0, #+20]
     48            }
     49          }
   \                     ??MENU_SetDefaultBkColor_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
     50          
     51          /*********************************************************************
     52          *
     53          *       MENU_SetDefaultBorderSize
     54          */

   \                                 In section .text, align 2, keep-with-next
     55          void MENU_SetDefaultBorderSize(unsigned BorderIndex, U8 BorderSize) {
     56            if (BorderIndex <= GUI_COUNTOF(MENU__DefaultProps.aBorder)) {
   \                     MENU_SetDefaultBorderSize: (+1)
   \   00000000   0x2805             CMP      R0,#+5
   \   00000002   0xD203             BCS.N    ??MENU_SetDefaultBorderSize_0
     57              MENU__DefaultProps.aBorder[BorderIndex] = BorderSize;
   \   00000004   0x....             LDR.N    R2,??DataTable9
   \   00000006   0x1880             ADDS     R0,R0,R2
   \   00000008   0xF880 0x1028      STRB     R1,[R0, #+40]
     58            }
     59          }
   \                     ??MENU_SetDefaultBorderSize_0: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
     60          
     61          /*********************************************************************
     62          *
     63          *       MENU_SetDefaultEffect
     64          */

   \                                 In section .text, align 2, keep-with-next
     65          void MENU_SetDefaultEffect(const WIDGET_EFFECT* pEffect) {
     66            MENU__pDefaultEffect = pEffect;
   \                     MENU_SetDefaultEffect: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable9_1
   \   00000002   0x6008             STR      R0,[R1, #+0]
     67          }
   \   00000004   0x4770             BX       LR               ;; return
     68          
     69          /*********************************************************************
     70          *
     71          *       MENU_SetDefaultFont
     72          */

   \                                 In section .text, align 2, keep-with-next
     73          void MENU_SetDefaultFont(const GUI_FONT GUI_UNI_PTR* pFont) {
     74            MENU__DefaultProps.pFont = pFont;
   \                     MENU_SetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable9
   \   00000002   0x62C8             STR      R0,[R1, #+44]
     75          }
   \   00000004   0x4770             BX       LR               ;; return
     76          
     77          /*********************************************************************
     78          *
     79          *       Public code, get defaults
     80          *
     81          **********************************************************************
     82          */
     83          /*********************************************************************
     84          *
     85          *       MENU_GetDefaultTextColor
     86          */

   \                                 In section .text, align 2, keep-with-next
     87          GUI_COLOR MENU_GetDefaultTextColor(unsigned ColorIndex) {
     88            GUI_COLOR Color = GUI_INVALID_COLOR;
   \                     MENU_GetDefaultTextColor: (+1)
   \   00000000   0xF06F 0x4170      MVN      R1,#-268435456
     89            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aTextColor)) {
   \   00000004   0x2806             CMP      R0,#+6
   \   00000006   0xD202             BCS.N    ??MENU_GetDefaultTextColor_0
     90              Color = MENU__DefaultProps.aTextColor[ColorIndex];
   \   00000008   0x....             LDR.N    R1,??DataTable9
   \   0000000A   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
     91            }
     92            return Color;
   \                     ??MENU_GetDefaultTextColor_0: (+1)
   \   0000000E   0x4608             MOV      R0,R1
   \   00000010   0x4770             BX       LR               ;; return
     93          }
     94          
     95          /*********************************************************************
     96          *
     97          *       MENU_GetDefaultBkColor
     98          */

   \                                 In section .text, align 2, keep-with-next
     99          GUI_COLOR MENU_GetDefaultBkColor(unsigned ColorIndex) {
    100            GUI_COLOR Color = GUI_INVALID_COLOR;
   \                     MENU_GetDefaultBkColor: (+1)
   \   00000000   0xF06F 0x4170      MVN      R1,#-268435456
    101            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aBkColor)) {
   \   00000004   0x2806             CMP      R0,#+6
   \   00000006   0xD203             BCS.N    ??MENU_GetDefaultBkColor_0
    102              Color = MENU__DefaultProps.aBkColor[ColorIndex];
   \   00000008   0x....             LDR.N    R1,??DataTable9
   \   0000000A   0xEB01 0x0080      ADD      R0,R1,R0, LSL #+2
   \   0000000E   0x6941             LDR      R1,[R0, #+20]
    103            }
    104            return Color;
   \                     ??MENU_GetDefaultBkColor_0: (+1)
   \   00000010   0x4608             MOV      R0,R1
   \   00000012   0x4770             BX       LR               ;; return
    105          }
    106          
    107          /*********************************************************************
    108          *
    109          *       MENU_GetDefaultBorderSize
    110          */

   \                                 In section .text, align 2, keep-with-next
    111          U8 MENU_GetDefaultBorderSize(unsigned BorderIndex) {
    112            U8 BorderSize = 0;
   \                     MENU_GetDefaultBorderSize: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
    113            if (BorderIndex <= GUI_COUNTOF(MENU__DefaultProps.aBorder)) {
   \   00000002   0x2805             CMP      R0,#+5
   \   00000004   0xD203             BCS.N    ??MENU_GetDefaultBorderSize_0
    114              BorderSize = MENU__DefaultProps.aBorder[BorderIndex];
   \   00000006   0x....             LDR.N    R1,??DataTable9
   \   00000008   0x1840             ADDS     R0,R0,R1
   \   0000000A   0xF890 0x1028      LDRB     R1,[R0, #+40]
    115            }
    116            return BorderSize;
   \                     ??MENU_GetDefaultBorderSize_0: (+1)
   \   0000000E   0x4608             MOV      R0,R1
   \   00000010   0x4770             BX       LR               ;; return
    117          }
    118          
    119          /*********************************************************************
    120          *
    121          *       MENU_GetDefaultEffect
    122          */

   \                                 In section .text, align 2, keep-with-next
    123          const WIDGET_EFFECT* MENU_GetDefaultEffect(void) {
    124            return MENU__pDefaultEffect;
   \                     MENU_GetDefaultEffect: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    125          }
    126          
    127          /*********************************************************************
    128          *
    129          *       MENU_GetDefaultFont
    130          */

   \                                 In section .text, align 2, keep-with-next
    131          const GUI_FONT GUI_UNI_PTR* MENU_GetDefaultFont(void) {
    132            return MENU__DefaultProps.pFont;
   \                     MENU_GetDefaultFont: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable9
   \   00000002   0x6AC0             LDR      R0,[R0, #+44]
   \   00000004   0x4770             BX       LR               ;; return
    133          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     MENU__DefaultProps

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     MENU__pDefaultEffect
    134          
    135          #else  /* avoid empty object files */
    136            void MENU_Default_C(void) {}
    137          #endif
    138          
    139          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   MENU_GetDefaultBkColor
       0   MENU_GetDefaultBorderSize
       0   MENU_GetDefaultEffect
       0   MENU_GetDefaultFont
       0   MENU_GetDefaultTextColor
       0   MENU_SetDefaultBkColor
       0   MENU_SetDefaultBorderSize
       0   MENU_SetDefaultEffect
       0   MENU_SetDefaultFont
       0   MENU_SetDefaultTextColor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
      20  MENU_GetDefaultBkColor
      18  MENU_GetDefaultBorderSize
       6  MENU_GetDefaultEffect
       6  MENU_GetDefaultFont
      18  MENU_GetDefaultTextColor
      14  MENU_SetDefaultBkColor
      14  MENU_SetDefaultBorderSize
       6  MENU_SetDefaultEffect
       6  MENU_SetDefaultFont
      12  MENU_SetDefaultTextColor

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
