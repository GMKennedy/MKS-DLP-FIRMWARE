###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:58:23
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIPolyR.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIPolyR.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUIPolyR.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUIPolyR.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIPolyR.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIPolyR.c
     16          Purpose     : Polygon rotation
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include <math.h>
     21          #include "GUI.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       Public code
     26          *
     27          **********************************************************************
     28          */
     29          /*********************************************************************
     30          *
     31          *       GUI_RotatePolygon
     32          */

   \                                 In section .text, align 2, keep-with-next
     33          void GUI_RotatePolygon(GUI_POINT* pDest, const GUI_POINT* pSrc, int NumPoints, float Angle) {
   \                     GUI_RotatePolygon: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x4616             MOV      R6,R2
     34            int j;
     35            float fcos = cos(Angle);
   \   0000000C   0xEE10 0x0A10      VMOV     R0,S0
   \   00000010   0x.... 0x....      BL       __aeabi_f2d
   \   00000014   0xEC41 0x0B19      VMOV     D9,R0,R1
   \   00000018   0xEEB0 0x0A49      VMOV.F32 S0,S18
   \   0000001C   0xEEF0 0x0A69      VMOV.F32 S1,S19
   \   00000020   0x.... 0x....      BL       cos
   \   00000024   0xEC51 0x0B10      VMOV     R0,R1,D0
   \   00000028   0x.... 0x....      BL       __aeabi_d2f
   \   0000002C   0xEE08 0x0A10      VMOV     S16,R0
     36            float fsin = sin(Angle);
   \   00000030   0xEEB0 0x0A49      VMOV.F32 S0,S18
   \   00000034   0xEEF0 0x0A69      VMOV.F32 S1,S19
   \   00000038   0x.... 0x....      BL       sin
   \   0000003C   0xEC51 0x0B10      VMOV     R0,R1,D0
   \   00000040   0x.... 0x....      BL       __aeabi_d2f
   \   00000044   0xEE00 0x0A10      VMOV     S0,R0
     37            for (j=0; j<NumPoints; j++) {
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0xE028             B.N      ??GUI_RotatePolygon_0
     38              int x = (pSrc+j)->x;
   \                     ??GUI_RotatePolygon_1: (+1)
   \   0000004C   0xF935 0x1020      LDRSH    R1,[R5, R0, LSL #+2]
     39              int y = (pSrc+j)->y;
   \   00000050   0xEB05 0x0280      ADD      R2,R5,R0, LSL #+2
   \   00000054   0xF9B2 0x2002      LDRSH    R2,[R2, #+2]
   \   00000058   0xEE00 0x2A90      VMOV     S1,R2
     40              (pDest+j)->x =  x * fcos + y * fsin;
                                  ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   0000005C   0xEEF8 0x0AE0      VCVT.F32.S32 S1,S1
   \   00000060   0xEE01 0x1A10      VMOV     S2,R1
   \   00000064   0xEEB8 0x1AC1      VCVT.F32.S32 S2,S2
   \   00000068   0xEE21 0x1A08      VMUL.F32 S2,S2,S16
   \   0000006C   0xEE00 0x1A80      VMLA.F32 S2,S1,S0
   \   00000070   0xEEBD 0x1AC1      VCVT.S32.F32 S2,S2
   \   00000074   0xEE11 0x2A10      VMOV     R2,S2
   \   00000078   0xF824 0x2020      STRH     R2,[R4, R0, LSL #+2]
     41              (pDest+j)->y = -x * fsin + y * fcos;
                                  ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   0000007C   0x4249             RSBS     R1,R1,#+0
   \   0000007E   0xEE01 0x1A10      VMOV     S2,R1
   \   00000082   0xEEB8 0x1AC1      VCVT.F32.S32 S2,S2
   \   00000086   0xEE21 0x1A00      VMUL.F32 S2,S2,S0
   \   0000008A   0xEE00 0x1A88      VMLA.F32 S2,S1,S16
   \   0000008E   0xEEFD 0x0AC1      VCVT.S32.F32 S1,S2
   \   00000092   0xEE10 0x1A90      VMOV     R1,S1
   \   00000096   0xEB04 0x0280      ADD      R2,R4,R0, LSL #+2
   \   0000009A   0x8051             STRH     R1,[R2, #+2]
     42            }
   \   0000009C   0x1C40             ADDS     R0,R0,#+1
   \                     ??GUI_RotatePolygon_0: (+1)
   \   0000009E   0x42B0             CMP      R0,R6
   \   000000A0   0xDBD4             BLT.N    ??GUI_RotatePolygon_1
     43          }
   \   000000A2   0xECBD 0x8B04      VPOP     {D8-D9}
   \   000000A6   0xBD70             POP      {R4-R6,PC}       ;; return
     44          
     45          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   GUI_RotatePolygon
        32   -> __aeabi_d2f
        32   -> __aeabi_f2d
        32   -> cos
        32   -> sin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     168  GUI_RotatePolygon

 
 168 bytes in section .text
 
 168 bytes of CODE memory

Errors: none
Warnings: 2
