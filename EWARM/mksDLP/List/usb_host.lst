###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:15:31
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\usb_host.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\usb_host.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\usb_host.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\usb_host.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\usb_host.c
      1          /**
      2           ******************************************************************************
      3            * @file            : USB_HOST
      4            * @version         : v1.0_Cube
      5            * @brief           :  This file implements the USB Host 
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43          */
     44          
     45          /* Includes ------------------------------------------------------------------*/
     46          
     47          #include "usb_host.h"
     48          #include "usbh_core.h"
     49          #include "usbh_msc.h"
     50          
     51          /* USB Host Core handle declaration */

   \                                 In section .bss, align 4
     52          USBH_HandleTypeDef hUsbHostFS;
   \                     hUsbHostFS:
   \   00000000                      DS8 968

   \                                 In section .bss, align 1
     53          ApplicationTypeDef Appli_state = APPLICATION_IDLE;
   \                     Appli_state:
   \   00000000                      DS8 1
     54          
     55          /**
     56          * -- Insert your variables declaration here --
     57          */ 
     58          /* USER CODE BEGIN 0 */
     59          
     60          /* USER CODE END 0 */
     61          
     62          /*
     63          * user callbak declaration
     64          */ 
     65          static void USBH_UserProcess  (USBH_HandleTypeDef *phost, uint8_t id);
     66          
     67          /**
     68          * -- Insert your external function declaration here --
     69          */ 
     70          /* USER CODE BEGIN 1 */
     71          
     72          /* USER CODE END 1 */
     73          
     74          /* init function */				        

   \                                 In section .text, align 2, keep-with-next
     75          void MX_USB_HOST_Init(void)
     76          {
   \                     MX_USB_HOST_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     77            /* Init Host Library,Add Supported Class and Start the library*/
     78            USBH_Init(&hUsbHostFS, USBH_UserProcess, HOST_FS);
   \   00000002   0x....             LDR.N    R4,??DataTable3
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x.... 0x....      ADR.W    R1,USBH_UserProcess
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       USBH_Init
     79          
     80            USBH_RegisterClass(&hUsbHostFS, USBH_MSC_CLASS);
   \   00000010   0x....             LDR.N    R1,??DataTable3_1
   \   00000012   0x4620             MOV      R0,R4
   \   00000014   0x.... 0x....      BL       USBH_RegisterClass
     81          
     82            USBH_Start(&hUsbHostFS);
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001E   0x.... 0x....      B.W      USBH_Start
     83          }

   \                                 In section .text, align 2, keep-with-next
     84          void MX_USB_HOST_DeInit(void)
     85          {
   \                     MX_USB_HOST_DeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     86          	USBH_LL_Disconnect(&hUsbHostFS);
   \   00000002   0x....             LDR.N    R4,??DataTable3
   \   00000004   0x4620             MOV      R0,R4
   \   00000006   0x.... 0x....      BL       USBH_LL_Disconnect
     87          	USBH_Stop(&hUsbHostFS);
   \   0000000A   0x4620             MOV      R0,R4
   \   0000000C   0x.... 0x....      BL       USBH_Stop
     88          	USBH_DeInit(&hUsbHostFS);
   \   00000010   0x4620             MOV      R0,R4
   \   00000012   0xE8BD 0x4010      POP      {R4,LR}
   \   00000016   0x.... 0x....      B.W      USBH_DeInit
     89          }
     90          
     91          /*
     92           * Background task
     93          */ 

   \                                 In section .text, align 2, keep-with-next
     94          void MX_USB_HOST_Process(void) 
     95          {
     96            /* USB Host Background task */
     97              USBH_Process(&hUsbHostFS); 						
   \                     MX_USB_HOST_Process: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x.... 0x....      B.W      USBH_Process
     98          }
     99          /*
    100           * user callbak definition
    101          */ 

   \                                 In section .text, align 4, keep-with-next
    102          static void USBH_UserProcess  (USBH_HandleTypeDef *phost, uint8_t id)
    103          {
    104          
    105            /* USER CODE BEGIN 2 */
    106            switch(id)
   \                     USBH_UserProcess: (+1)
   \   00000000   0x2902             CMP      R1,#+2
   \   00000002   0xD007             BEQ.N    ??USBH_UserProcess_0
   \   00000004   0x2904             CMP      R1,#+4
   \   00000006   0xD009             BEQ.N    ??USBH_UserProcess_1
   \   00000008   0x2905             CMP      R1,#+5
   \   0000000A   0xD10A             BNE.N    ??USBH_UserProcess_2
    107            { 
    108            case HOST_USER_SELECT_CONFIGURATION:
    109            break;
    110              
    111            case HOST_USER_DISCONNECTION:
    112            Appli_state = APPLICATION_DISCONNECT;
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x....             LDR.N    R1,??DataTable3_2
   \   00000010   0x7008             STRB     R0,[R1, #+0]
    113            break;
   \   00000012   0x4770             BX       LR
    114              
    115            case HOST_USER_CLASS_ACTIVE:
    116            Appli_state = APPLICATION_READY;
   \                     ??USBH_UserProcess_0: (+1)
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x....             LDR.N    R1,??DataTable3_2
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    117            break;
   \   0000001A   0x4770             BX       LR
    118          
    119            case HOST_USER_CONNECTION:
    120            Appli_state = APPLICATION_START;
   \                     ??USBH_UserProcess_1: (+1)
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x....             LDR.N    R1,??DataTable3_2
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    121            break;
    122          
    123            default:
    124            break; 
    125            }
    126            /* USER CODE END 2 */
    127          }
   \                     ??USBH_UserProcess_2: (+1)
   \   00000022   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     hUsbHostFS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     USBH_msc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     Appli_state
    128          
    129          /**
    130            * @}
    131            */
    132          
    133          /**
    134            * @}
    135            */
    136          
    137          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MX_USB_HOST_DeInit
         0   -> USBH_DeInit
         8   -> USBH_LL_Disconnect
         8   -> USBH_Stop
       8   MX_USB_HOST_Init
         8   -> USBH_Init
         8   -> USBH_RegisterClass
         0   -> USBH_Start
       0   MX_USB_HOST_Process
         0   -> USBH_Process
       0   USBH_UserProcess


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       1  Appli_state
      26  MX_USB_HOST_DeInit
      34  MX_USB_HOST_Init
       6  MX_USB_HOST_Process
      36  USBH_UserProcess
     968  hUsbHostFS

 
 969 bytes in section .bss
 114 bytes in section .text
 
 114 bytes of CODE memory
 969 bytes of DATA memory

Errors: none
Warnings: none
