###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:14:32
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\dma.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\dma.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\dma.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\dma.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\dma.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : dma.c
      4            * Description        : This file provides code for the configuration
      5            *                      of all the requested memory to memory DMA transfers.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          /* Includes ------------------------------------------------------------------*/
     45          #include "dma.h"
     46          
     47          /* USER CODE BEGIN 0 */
     48          
     49          /* USER CODE END 0 */
     50          
     51          /*----------------------------------------------------------------------------*/
     52          /* Configure DMA                                                              */
     53          /*----------------------------------------------------------------------------*/
     54          
     55          /* USER CODE BEGIN 1 */
     56          
     57          /* USER CODE END 1 */
     58          
     59          /** 
     60            * Enable DMA controller clock
     61            */

   \                                 In section .text, align 4, keep-with-next
     62          void MX_DMA_Init(void) 
     63          {
   \                     MX_DMA_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     64            /* DMA controller clock enable */
     65            __HAL_RCC_DMA1_CLK_ENABLE();
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x482F             LDR.N    R0,??MX_DMA_Init_0  ;; 0x40023830
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0xF441 0x1100      ORR      R1,R1,#0x200000
   \   0000000E   0x6001             STR      R1,[R0, #+0]
   \   00000010   0x6801             LDR      R1,[R0, #+0]
   \   00000012   0xF401 0x1100      AND      R1,R1,#0x200000
   \   00000016   0x9100             STR      R1,[SP, #+0]
   \   00000018   0x9900             LDR      R1,[SP, #+0]
     66            __HAL_RCC_DMA2_CLK_ENABLE();
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x9100             STR      R1,[SP, #+0]
   \   0000001E   0x6801             LDR      R1,[R0, #+0]
   \   00000020   0xF441 0x0180      ORR      R1,R1,#0x400000
   \   00000024   0x6001             STR      R1,[R0, #+0]
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF400 0x0080      AND      R0,R0,#0x400000
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x9800             LDR      R0,[SP, #+0]
     67          
     68            /* DMA interrupt init */
     69            /* DMA1_Stream3_IRQn interrupt configuration *///hdma_spi2_rx
     70            HAL_NVIC_SetPriority(DMA1_Stream3_IRQn, 4, 0);
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2104             MOVS     R1,#+4
   \   00000034   0x200E             MOVS     R0,#+14
   \   00000036   0x.... 0x....      BL       HAL_NVIC_SetPriority
     71            HAL_NVIC_EnableIRQ(DMA1_Stream3_IRQn);
   \   0000003A   0x200E             MOVS     R0,#+14
   \   0000003C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     72            /* DMA1_Stream4_IRQn interrupt configuration *///hdma_spi2_tx
     73            HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 4, 0);
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2104             MOVS     R1,#+4
   \   00000044   0x200F             MOVS     R0,#+15
   \   00000046   0x.... 0x....      BL       HAL_NVIC_SetPriority
     74            HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
   \   0000004A   0x200F             MOVS     R0,#+15
   \   0000004C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     75            /* DMA2_Stream0_IRQn interrupt configuration *///hdma_spi1_rx
     76            HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 4, 0);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x2104             MOVS     R1,#+4
   \   00000054   0x2038             MOVS     R0,#+56
   \   00000056   0x.... 0x....      BL       HAL_NVIC_SetPriority
     77            HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
   \   0000005A   0x2038             MOVS     R0,#+56
   \   0000005C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     78            /* DMA2_Stream1_IRQn interrupt configuration *///
     79            //HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 4, 0);
     80            //HAL_NVIC_EnableIRQ(DMA2_Stream1_IRQn);
     81            /* DMA2_Stream2_IRQn interrupt configuration *///hdma_usart1_rx//hdma_usart6_rx
     82            HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 4, 0);
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x203A             MOVS     R0,#+58
   \   00000066   0x.... 0x....      BL       HAL_NVIC_SetPriority
     83            HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
   \   0000006A   0x203A             MOVS     R0,#+58
   \   0000006C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     84            /* DMA2_Stream3_IRQn interrupt configuration *///hdma_sdio_rx
     85            HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 4, 0);
   \   00000070   0x2200             MOVS     R2,#+0
   \   00000072   0x2104             MOVS     R1,#+4
   \   00000074   0x203B             MOVS     R0,#+59
   \   00000076   0x.... 0x....      BL       HAL_NVIC_SetPriority
     86            HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
   \   0000007A   0x203B             MOVS     R0,#+59
   \   0000007C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     87            /* DMA2_Stream4_IRQn interrupt configuration *///hdma_adc1
     88            HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 4, 0);
   \   00000080   0x2200             MOVS     R2,#+0
   \   00000082   0x2104             MOVS     R1,#+4
   \   00000084   0x203C             MOVS     R0,#+60
   \   00000086   0x.... 0x....      BL       HAL_NVIC_SetPriority
     89            HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);	
   \   0000008A   0x203C             MOVS     R0,#+60
   \   0000008C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     90            /* DMA2_Stream5_IRQn interrupt configuration *///hdma_spi1_tx
     91            HAL_NVIC_SetPriority(DMA2_Stream5_IRQn, 4, 0);
   \   00000090   0x2200             MOVS     R2,#+0
   \   00000092   0x2104             MOVS     R1,#+4
   \   00000094   0x2044             MOVS     R0,#+68
   \   00000096   0x.... 0x....      BL       HAL_NVIC_SetPriority
     92            HAL_NVIC_EnableIRQ(DMA2_Stream5_IRQn);
   \   0000009A   0x2044             MOVS     R0,#+68
   \   0000009C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     93            /* DMA2_Stream6_IRQn interrupt configuration *///hdma_sdio_tx
     94            HAL_NVIC_SetPriority(DMA2_Stream6_IRQn, 4, 0);
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x2104             MOVS     R1,#+4
   \   000000A4   0x2045             MOVS     R0,#+69
   \   000000A6   0x.... 0x....      BL       HAL_NVIC_SetPriority
     95            HAL_NVIC_EnableIRQ(DMA2_Stream6_IRQn);
   \   000000AA   0x2045             MOVS     R0,#+69
   \   000000AC   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
     96            /* DMA2_Stream7_IRQn interrupt configuration *///hdma_usart1_tx//hdma_usart6_tx
     97            HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 4, 0);
   \   000000B0   0x2200             MOVS     R2,#+0
   \   000000B2   0x2104             MOVS     R1,#+4
   \   000000B4   0x2046             MOVS     R0,#+70
   \   000000B6   0x.... 0x....      BL       HAL_NVIC_SetPriority
     98            HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
   \   000000BA   0x2046             MOVS     R0,#+70
   \   000000BC   0xE8BD 0x4002      POP      {R1,LR}
   \   000000C0   0x.... 0x....      B.W      HAL_NVIC_EnableIRQ
   \                     ??MX_DMA_Init_0:
   \   000000C4   0x40023830         DC32     0x40023830
     99          
    100          }
    101          
    102          /* USER CODE BEGIN 2 */
    103          
    104          /* USER CODE END 2 */
    105          
    106          /**
    107            * @}
    108            */
    109          
    110          /**
    111            * @}
    112            */
    113          
    114          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MX_DMA_Init
         0   -> HAL_NVIC_EnableIRQ
         8   -> HAL_NVIC_EnableIRQ
         8   -> HAL_NVIC_SetPriority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     200  MX_DMA_Init

 
 200 bytes in section .text
 
 200 bytes of CODE memory

Errors: none
Warnings: none
