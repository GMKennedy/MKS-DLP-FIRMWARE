###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:14:46
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\Third_Party\FatFs\src\ff_gen_drv.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\Third_Party\FatFs\src\ff_gen_drv.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ff_gen_drv.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\ff_gen_drv.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\Third_Party\FatFs\src\ff_gen_drv.c
      1          /**
      2            ******************************************************************************
      3            * @file    ff_gen_drv.c 
      4            * @author  MCD Application Team
      5            * @version V1.3.0
      6            * @date    08-May-2015
      7            * @brief   FatFs generic low level driver.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2015 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */ 
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "ff_gen_drv.h"
     30          
     31          /* Private typedef -----------------------------------------------------------*/
     32          /* Private define ------------------------------------------------------------*/
     33          /* Private variables ---------------------------------------------------------*/

   \                                 In section .bss, align 4
     34          Disk_drvTypeDef disk = {{0},{0},{0},0};
   \                     disk:
   \   00000000                      DS8 16
     35          
     36          /* Private function prototypes -----------------------------------------------*/
     37          /* Private functions ---------------------------------------------------------*/
     38          
     39          /**
     40            * @brief  Links a compatible diskio driver/lun id and increments the number of active
     41            *         linked drivers.
     42            * @note   The number of linked drivers (volumes) is up to 10 due to FatFs limits.
     43            * @param  drv: pointer to the disk IO Driver structure
     44            * @param  path: pointer to the logical drive path 
     45            * @param  lun : only used for USB Key Disk to add multi-lun management
     46                      else the paramter must be equal to 0
     47            * @retval Returns 0 in case of success, otherwise 1.
     48            */

   \                                 In section .text, align 2, keep-with-next
     49          uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
     50          {
   \                     FATFS_LinkDriverEx: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
   \   00000002   0x4603             MOV      R3,R0
     51            uint8_t ret = 1;
   \   00000004   0x2001             MOVS     R0,#+1
     52            uint8_t DiskNum = 0;
     53            
     54            if(disk.nbr <= _VOLUMES)
   \   00000006   0x....             LDR.N    R4,??DataTable4
   \   00000008   0x7BA5             LDRB     R5,[R4, #+14]
   \   0000000A   0x2D03             CMP      R5,#+3
   \   0000000C   0xDA14             BGE.N    ??FATFS_LinkDriverEx_0
     55            {
     56              disk.is_initialized[disk.nbr] = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x7BA5             LDRB     R5,[R4, #+14]
   \   00000012   0x5528             STRB     R0,[R5, R4]
     57              disk.drv[disk.nbr] = drv;  
   \   00000014   0x7BA0             LDRB     R0,[R4, #+14]
   \   00000016   0xEB04 0x0080      ADD      R0,R4,R0, LSL #+2
   \   0000001A   0x6043             STR      R3,[R0, #+4]
     58              disk.lun[disk.nbr] = lun;  
   \   0000001C   0x7BA0             LDRB     R0,[R4, #+14]
   \   0000001E   0x1900             ADDS     R0,R0,R4
   \   00000020   0x7302             STRB     R2,[R0, #+12]
     59              DiskNum = disk.nbr++;
   \   00000022   0x7BA0             LDRB     R0,[R4, #+14]
   \   00000024   0x1C42             ADDS     R2,R0,#+1
   \   00000026   0x73A2             STRB     R2,[R4, #+14]
     60              path[0] = DiskNum + '0';
   \   00000028   0x3030             ADDS     R0,R0,#+48
   \   0000002A   0x7008             STRB     R0,[R1, #+0]
     61              path[1] = ':';
   \   0000002C   0x203A             MOVS     R0,#+58
   \   0000002E   0x7048             STRB     R0,[R1, #+1]
     62              path[2] = '/';
   \   00000030   0x202F             MOVS     R0,#+47
   \   00000032   0x7088             STRB     R0,[R1, #+2]
     63              path[3] = 0;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x70C8             STRB     R0,[R1, #+3]
     64              ret = 0;
     65            }
     66            
     67            return ret;
   \                     ??FATFS_LinkDriverEx_0: (+1)
   \   00000038   0xBC30             POP      {R4,R5}
   \   0000003A   0x4770             BX       LR               ;; return
     68          }

   \                                 In section .text, align 2, keep-with-next
     69          uint8_t FATFS_LinkDriverEx_sd(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
     70          {
   \                     FATFS_LinkDriverEx_sd: (+1)
   \   00000000   0xB410             PUSH     {R4}
     71            uint8_t ret = 1;
     72            uint8_t DiskNum = 0;
                           ^
Warning[Pe177]: variable "DiskNum" was declared but never referenced
     73            
     74          	disk.is_initialized[1] = 0;
   \   00000002   0x....             LDR.N    R3,??DataTable4
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x705C             STRB     R4,[R3, #+1]
     75          	disk.drv[1] = drv;  
   \   00000008   0x6098             STR      R0,[R3, #+8]
     76          	disk.lun[1] = lun;  
   \   0000000A   0x735A             STRB     R2,[R3, #+13]
     77          	path[0] = 1 + '0';
   \   0000000C   0x2031             MOVS     R0,#+49
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
     78          	path[1] = ':';
   \   00000010   0x203A             MOVS     R0,#+58
   \   00000012   0x7048             STRB     R0,[R1, #+1]
     79          	path[2] = '/';
   \   00000014   0x202F             MOVS     R0,#+47
   \   00000016   0x7088             STRB     R0,[R1, #+2]
     80          	path[3] = 0;
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x70C8             STRB     R0,[R1, #+3]
     81          	ret = 0;
     82          
     83          	return ret;
   \   0000001C   0xBC10             POP      {R4}
   \   0000001E   0x4770             BX       LR               ;; return
     84            
     85          }
     86          

   \                                 In section .text, align 2, keep-with-next
     87          uint8_t FATFS_LinkDriverEx_usb(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
     88          {
   \                     FATFS_LinkDriverEx_usb: (+1)
   \   00000000   0xB410             PUSH     {R4}
     89            uint8_t ret = 1;
     90            uint8_t DiskNum = 0;
                           ^
Warning[Pe177]: variable "DiskNum" was declared but never referenced
     91          
     92          	disk.is_initialized[0] = 0;
   \   00000002   0x....             LDR.N    R3,??DataTable4
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x701C             STRB     R4,[R3, #+0]
     93          	disk.drv[0] = drv;  
   \   00000008   0x6058             STR      R0,[R3, #+4]
     94          	disk.lun[0] = lun;  
   \   0000000A   0x731A             STRB     R2,[R3, #+12]
     95          	path[0] = 0 + '0';
   \   0000000C   0x2030             MOVS     R0,#+48
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
     96          	path[1] = ':';
   \   00000010   0x203A             MOVS     R0,#+58
   \   00000012   0x7048             STRB     R0,[R1, #+1]
     97          	path[2] = '/';
   \   00000014   0x202F             MOVS     R0,#+47
   \   00000016   0x7088             STRB     R0,[R1, #+2]
     98          	path[3] = 0;
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x70C8             STRB     R0,[R1, #+3]
     99          	ret = 0;
    100          
    101          	return ret;
   \   0000001C   0xBC10             POP      {R4}
   \   0000001E   0x4770             BX       LR               ;; return
    102          }
    103          
    104          /**
    105            * @brief  Links a compatible diskio driver and increments the number of active
    106            *         linked drivers.          
    107            * @note   The number of linked drivers (volumes) is up to 10 due to FatFs limits
    108            * @param  drv: pointer to the disk IO Driver structure
    109            * @param  path: pointer to the logical drive path 
    110            * @retval Returns 0 in case of success, otherwise 1.
    111            */

   \                                 In section .text, align 2, keep-with-next
    112          uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
    113          {
    114            return FATFS_LinkDriverEx(drv, path, 0);
   \                     FATFS_LinkDriver: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      FATFS_LinkDriverEx
    115          }

   \                                 In section .text, align 2, keep-with-next
    116          uint8_t FATFS_LinkDriver_sd(Diskio_drvTypeDef *drv, char *path)
    117          {
    118            return FATFS_LinkDriverEx_sd(drv, path, 0);
   \                     FATFS_LinkDriver_sd: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      FATFS_LinkDriverEx_sd
    119          }

   \                                 In section .text, align 2, keep-with-next
    120          uint8_t FATFS_LinkDriver_usb(Diskio_drvTypeDef *drv, char *path)
    121          {
    122            return FATFS_LinkDriverEx_usb(drv, path, 0);
   \                     FATFS_LinkDriver_usb: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x....             B.N      FATFS_LinkDriverEx_usb
    123          }
    124          
    125          /**
    126            * @brief  Unlinks a diskio driver and decrements the number of active linked
    127            *         drivers.
    128            * @param  path: pointer to the logical drive path  
    129            * @param  lun : not used   
    130            * @retval Returns 0 in case of success, otherwise 1.
    131            */

   \                                 In section .text, align 2, keep-with-next
    132          uint8_t FATFS_UnLinkDriverEx(char *path, uint8_t lun)
    133          { 
   \                     FATFS_UnLinkDriverEx: (+1)
   \   00000000   0xB410             PUSH     {R4}
    134            uint8_t DiskNum = 0;
    135            uint8_t ret = 1;
   \   00000002   0x2101             MOVS     R1,#+1
    136            
    137            if(disk.nbr >= 1)
   \   00000004   0x....             LDR.N    R2,??DataTable4
   \   00000006   0x7B93             LDRB     R3,[R2, #+14]
   \   00000008   0x2B00             CMP      R3,#+0
   \   0000000A   0xD00F             BEQ.N    ??FATFS_UnLinkDriverEx_0
    138            {    
    139              DiskNum = path[0] - '0';
   \   0000000C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000010   0x3830             SUBS     R0,R0,#+48
   \   00000012   0xB2C0             UXTB     R0,R0
    140              if(disk.drv[DiskNum] != 0)
   \   00000014   0xEB02 0x0380      ADD      R3,R2,R0, LSL #+2
   \   00000018   0x685C             LDR      R4,[R3, #+4]
   \   0000001A   0x2C00             CMP      R4,#+0
   \   0000001C   0xD006             BEQ.N    ??FATFS_UnLinkDriverEx_0
    141              {
    142                disk.drv[DiskNum] = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x6059             STR      R1,[R3, #+4]
    143                disk.lun[DiskNum] = 0;
   \   00000022   0x1880             ADDS     R0,R0,R2
   \   00000024   0x7301             STRB     R1,[R0, #+12]
    144                disk.nbr--;
   \   00000026   0x7B90             LDRB     R0,[R2, #+14]
   \   00000028   0x1E40             SUBS     R0,R0,#+1
   \   0000002A   0x7390             STRB     R0,[R2, #+14]
    145                ret = 0;
    146              }
    147            }
    148            
    149            return ret;
   \                     ??FATFS_UnLinkDriverEx_0: (+1)
   \   0000002C   0x4608             MOV      R0,R1
   \   0000002E   0xBC10             POP      {R4}
   \   00000030   0x4770             BX       LR               ;; return
    150          }
    151          
    152          /**
    153            * @brief  Unlinks a diskio driver and decrements the number of active linked
    154            *         drivers.
    155            * @param  path: pointer to the logical drive path  
    156            * @retval Returns 0 in case of success, otherwise 1.
    157            */

   \                                 In section .text, align 2, keep-with-next
    158          uint8_t FATFS_UnLinkDriver(char *path)
    159          { 
    160            return FATFS_UnLinkDriverEx(path, 0);
   \                     FATFS_UnLinkDriver: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x....             B.N      FATFS_UnLinkDriverEx
    161          }
    162          
    163          /**
    164            * @brief  Gets number of linked drivers to the FatFs module.
    165            * @param  None
    166            * @retval Number of attached drivers.
    167            */

   \                                 In section .text, align 2, keep-with-next
    168          uint8_t FATFS_GetAttachedDriversNbr(void)
    169          {
    170            return disk.nbr;
   \                     FATFS_GetAttachedDriversNbr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4
   \   00000002   0x7B80             LDRB     R0,[R0, #+14]
   \   00000004   0x4770             BX       LR               ;; return
    171          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     disk
    172           
    173          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
    174          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   FATFS_GetAttachedDriversNbr
       0   FATFS_LinkDriver
         0   -> FATFS_LinkDriverEx
       8   FATFS_LinkDriverEx
       4   FATFS_LinkDriverEx_sd
       4   FATFS_LinkDriverEx_usb
       0   FATFS_LinkDriver_sd
         0   -> FATFS_LinkDriverEx_sd
       0   FATFS_LinkDriver_usb
         0   -> FATFS_LinkDriverEx_usb
       0   FATFS_UnLinkDriver
         0   -> FATFS_UnLinkDriverEx
       4   FATFS_UnLinkDriverEx


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       6  FATFS_GetAttachedDriversNbr
       4  FATFS_LinkDriver
      60  FATFS_LinkDriverEx
      32  FATFS_LinkDriverEx_sd
      32  FATFS_LinkDriverEx_usb
       4  FATFS_LinkDriver_sd
       4  FATFS_LinkDriver_usb
       4  FATFS_UnLinkDriver
      50  FATFS_UnLinkDriverEx
      16  disk

 
  16 bytes in section .bss
 200 bytes in section .text
 
 200 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: 2
