###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:14:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\i2c.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\i2c.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\i2c.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\i2c.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\i2c.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : I2C.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the I2C instances.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          
     45          /* Includes ------------------------------------------------------------------*/
     46          #include "i2c.h"
     47          
     48          #include "gpio.h"
     49          
     50          /* USER CODE BEGIN 0 */
     51          
     52          /* USER CODE END 0 */
     53          

   \                                 In section .bss, align 4
     54          I2C_HandleTypeDef hi2c1;
   \                     hi2c1:
   \   00000000                      DS8 84
     55          
     56          /* I2C1 init function */

   \                                 In section .text, align 2, keep-with-next
     57          void MX_I2C1_Init(void)
     58          {
   \                     MX_I2C1_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     59          
     60            hi2c1.Instance = I2C1;
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40005400
   \   00000006   0x6001             STR      R1,[R0, #+0]
     61            hi2c1.Init.ClockSpeed = 400000;
   \   00000008   0x....             LDR.N    R1,??DataTable2_2  ;; 0x61a80
   \   0000000A   0x6041             STR      R1,[R0, #+4]
     62            hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x6081             STR      R1,[R0, #+8]
     63            hi2c1.Init.OwnAddress1 = 0;
   \   00000010   0x60C1             STR      R1,[R0, #+12]
     64            hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
   \   00000012   0xF44F 0x4180      MOV      R1,#+16384
   \   00000016   0x6101             STR      R1,[R0, #+16]
     65            hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x6141             STR      R1,[R0, #+20]
     66            hi2c1.Init.OwnAddress2 = 0;
   \   0000001C   0x6181             STR      R1,[R0, #+24]
     67            hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
   \   0000001E   0x61C1             STR      R1,[R0, #+28]
     68            hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
   \   00000020   0x6201             STR      R1,[R0, #+32]
     69            if (HAL_I2C_Init(&hi2c1) != HAL_OK)
   \   00000022   0x.... 0x....      BL       HAL_I2C_Init
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD003             BEQ.N    ??MX_I2C1_Init_0
     70            {
     71              Error_Handler();
   \   0000002A   0xE8BD 0x4001      POP      {R0,LR}
   \   0000002E   0x.... 0x....      B.W      Error_Handler
     72            }
     73          
     74          }
   \                     ??MX_I2C1_Init_0: (+1)
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
     75          

   \                                 In section .text, align 2, keep-with-next
     76          void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
     77          {
     78          
     79            GPIO_InitTypeDef GPIO_InitStruct;
     80            if(i2cHandle->Instance==I2C1)
   \                     HAL_I2C_MspInit: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40005400
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD000             BEQ.N    ??HAL_I2C_MspInit_0
   \   00000008   0x4770             BX       LR
     81            {
     82            /* USER CODE BEGIN I2C1_MspInit 0 */
     83          
     84            /* USER CODE END I2C1_MspInit 0 */
     85            
     86              /**I2C1 GPIO Configuration    
     87              PB6     ------> I2C1_SCL
     88              PB7     ------> I2C1_SDA 
     89              */
     90              GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
   \                     ??HAL_I2C_MspInit_0: (+1)
   \   0000000A   0xB500             PUSH     {LR}
   \   0000000C   0xB087             SUB      SP,SP,#+28
   \   0000000E   0x20C0             MOVS     R0,#+192
   \   00000010   0x9001             STR      R0,[SP, #+4]
     91              GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
   \   00000012   0x2012             MOVS     R0,#+18
   \   00000014   0x9002             STR      R0,[SP, #+8]
     92              GPIO_InitStruct.Pull = GPIO_PULLUP;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x9003             STR      R0,[SP, #+12]
     93              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0x9004             STR      R0,[SP, #+16]
     94              GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
   \   0000001E   0x2004             MOVS     R0,#+4
   \   00000020   0x9005             STR      R0,[SP, #+20]
     95              HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000022   0xA901             ADD      R1,SP,#+4
   \   00000024   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40020400
   \   00000026   0x.... 0x....      BL       HAL_GPIO_Init
     96          
     97              /* Peripheral clock enable */
     98              __HAL_RCC_I2C1_CLK_ENABLE();
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x9000             STR      R0,[SP, #+0]
   \   0000002E   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40023840
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0xF441 0x1100      ORR      R1,R1,#0x200000
   \   00000036   0x6001             STR      R1,[R0, #+0]
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF400 0x1000      AND      R0,R0,#0x200000
   \   0000003E   0x9000             STR      R0,[SP, #+0]
   \   00000040   0x9800             LDR      R0,[SP, #+0]
     99            /* USER CODE BEGIN I2C1_MspInit 1 */
    100          
    101            /* USER CODE END I2C1_MspInit 1 */
    102            }
    103          }
   \   00000042   0xB007             ADD      SP,SP,#+28
   \   00000044   0xBD00             POP      {PC}             ;; return
    104          

   \                                 In section .text, align 2, keep-with-next
    105          void HAL_I2C_MspDeInit(I2C_HandleTypeDef* i2cHandle)
    106          {
    107          
    108            if(i2cHandle->Instance==I2C1)
   \                     HAL_I2C_MspDeInit: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40005400
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD108             BNE.N    ??HAL_I2C_MspDeInit_0
    109            {
    110            /* USER CODE BEGIN I2C1_MspDeInit 0 */
    111          
    112            /* USER CODE END I2C1_MspDeInit 0 */
    113              /* Peripheral clock disable */
    114              __HAL_RCC_I2C1_CLK_DISABLE();
   \   00000008   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40023840
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0xF421 0x1100      BIC      R1,R1,#0x200000
   \   00000010   0x6001             STR      R1,[R0, #+0]
    115            
    116              /**I2C1 GPIO Configuration    
    117              PB6     ------> I2C1_SCL
    118              PB7     ------> I2C1_SDA 
    119              */
    120              HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
   \   00000012   0x21C0             MOVS     R1,#+192
   \   00000014   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40020400
   \   00000016   0x.... 0x....      B.W      HAL_GPIO_DeInit
    121          
    122            }
    123            /* USER CODE BEGIN I2C1_MspDeInit 1 */
    124          
    125            /* USER CODE END I2C1_MspDeInit 1 */
    126          } 
   \                     ??HAL_I2C_MspDeInit_0: (+1)
   \   0000001A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     hi2c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40005400         DC32     0x40005400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x00061A80         DC32     0x61a80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40023840         DC32     0x40023840
    127          
    128          /* USER CODE BEGIN 1 */
    129          
    130          /* USER CODE END 1 */
    131          
    132          /**
    133            * @}
    134            */
    135          
    136          /**
    137            * @}
    138            */
    139          
    140          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   HAL_I2C_MspDeInit
         0   -> HAL_GPIO_DeInit
      32   HAL_I2C_MspInit
        32   -> HAL_GPIO_Init
       8   MX_I2C1_Init
         0   -> Error_Handler
         8   -> HAL_I2C_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
      28  HAL_I2C_MspDeInit
      70  HAL_I2C_MspInit
      52  MX_I2C1_Init
      84  hi2c1

 
  84 bytes in section .bss
 170 bytes in section .text
 
 170 bytes of CODE memory
  84 bytes of DATA memory

Errors: none
Warnings: none
