###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:58:24
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIValf.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIValf.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUIValf.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUIValf.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Core\GUIValf.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIValF.C
     16          Purpose     : Displaying floating point values
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_Protected.h"
     21          #include "math.h"
     22          
     23          /*********************************************************************
     24          *
     25          *       Static code
     26          *
     27          **********************************************************************
     28          */
     29          /*********************************************************************
     30          *
     31          *       _DispFloatFix
     32          */

   \                                 In section .text, align 2, keep-with-next
     33          static void _DispFloatFix(float f, char Len, char Decs, int DrawPlusSign) {
   \                     _DispFloatFix: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
     34            f *= GUI_Pow10[(unsigned)Decs];
     35            f += 0.5;
     36            f = (float) floor (f);
   \   00000008   0x....             LDR.N    R0,??DataTable3_1
   \   0000000A   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000000E   0xEE00 0x0A90      VMOV     S1,R0
   \   00000012   0xEEF8 0x0A60      VCVT.F32.U32 S1,S1
   \   00000016   0xEEB6 0x1A00      VMOV.F32 S2,#0.5
   \   0000001A   0xEE00 0x1A80      VMLA.F32 S2,S1,S0
   \   0000001E   0xEE11 0x0A10      VMOV     R0,S2
   \   00000022   0x.... 0x....      BL       __aeabi_f2d
   \   00000026   0xEC41 0x0B10      VMOV     D0,R0,R1
   \   0000002A   0x.... 0x....      BL       floor
   \   0000002E   0xEC51 0x0B10      VMOV     R0,R1,D0
   \   00000032   0x.... 0x....      BL       __aeabi_d2f
   \   00000036   0xEE00 0x0A10      VMOV     S0,R0
     37            if (DrawPlusSign) {
   \   0000003A   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   0000003E   0x2E00             CMP      R6,#+0
   \   00000040   0x462A             MOV      R2,R5
   \   00000042   0xB2D2             UXTB     R2,R2
   \   00000044   0x4621             MOV      R1,R4
   \   00000046   0xB2C9             UXTB     R1,R1
   \   00000048   0xEE10 0x0A10      VMOV     R0,S0
   \   0000004C   0xD003             BEQ.N    ??_DispFloatFix_0
     38              GUI_DispSDecShift((long)f, Len, Decs);
   \   0000004E   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000052   0x.... 0x....      B.W      GUI_DispSDecShift
     39            } else {
     40              GUI_DispDecShift((long)f, Len, Decs);
   \                     ??_DispFloatFix_0: (+1)
   \   00000056   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000005A   0x.... 0x....      B.W      GUI_DispDecShift
     41            }
     42          }
     43          
     44          /*********************************************************************
     45          *
     46          *       Public code
     47          *
     48          **********************************************************************
     49          */
     50          /*********************************************************************
     51          *
     52          *       GUI_DispFloatFix
     53          */

   \                                 In section .text, align 2, keep-with-next
     54          void GUI_DispFloatFix(float f, char Len, char Decs) {
     55            _DispFloatFix(f, Len, Decs, 0);
   \                     GUI_DispFloatFix: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0xB240             SXTB     R0,R0
   \   00000004   0x....             B.N      _DispFloatFix
     56          }
     57          
     58          /*********************************************************************
     59          *
     60          *       GUI_DispFloatMin
     61          */

   \                                 In section .text, align 4, keep-with-next
     62          void GUI_DispFloatMin(float f, char Fract) {
   \                     GUI_DispFloatMin: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000A   0x4604             MOV      R4,R0
     63            char Len;
     64            Len = GUI_Long2Len((long)f);
   \   0000000C   0xEEBD 0x0AC8      VCVT.S32.F32 S0,S16
   \   00000010   0xEE10 0x0A10      VMOV     R0,S0
   \   00000014   0x.... 0x....      BL       GUI_Long2Len
     65            if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
   \   00000018   0xEEB5 0x8A40      VCMP.F32 S16,#0.0
   \   0000001C   0xEEF1 0xFA10      FMSTAT   
   \   00000020   0xD507             BPL.N    ??GUI_DispFloatMin_0
   \   00000022   0xED9F 0x....      VLDR.W   S0,??DataTable3  ;; 0xbf7ffffe
   \   00000026   0xEEB4 0x8A40      VCMP.F32 S16,S0
   \   0000002A   0xEEF1 0xFA10      FMSTAT   
   \   0000002E   0xDB00             BLT.N    ??GUI_DispFloatMin_0
     66              Len++;
   \   00000030   0x1C40             ADDS     R0,R0,#+1
     67            }
     68            _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 0);
   \                     ??GUI_DispFloatMin_0: (+1)
   \   00000032   0x4623             MOV      R3,R4
   \   00000034   0xB25B             SXTB     R3,R3
   \   00000036   0x1E5B             SUBS     R3,R3,#+1
   \   00000038   0x419B             SBCS     R3,R3,R3
   \   0000003A   0x43DB             MVNS     R3,R3
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x4621             MOV      R1,R4
   \   00000040   0xB249             SXTB     R1,R1
   \   00000042   0x1820             ADDS     R0,R4,R0
   \   00000044   0xEB10 0x70D3      ADDS     R0,R0,R3, LSR #+31
   \   00000048   0xB240             SXTB     R0,R0
   \   0000004A   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000004E   0xECBD 0x8B02      VPOP     {D8}
   \   00000052   0xE8BD 0x4010      POP      {R4,LR}
   \   00000056   0x....             B.N      _DispFloatFix
     69          }
     70          
     71          /*********************************************************************
     72          *
     73          *       GUI_DispFloat
     74          */

   \                                 In section .text, align 4, keep-with-next
     75          void GUI_DispFloat(float f, char Len) {
   \                     GUI_DispFloat: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000A   0x4604             MOV      R4,R0
     76            int Decs;
     77            Decs =  Len - GUI_Long2Len((long)f)-1;
   \   0000000C   0xB264             SXTB     R4,R4
   \   0000000E   0xEEBD 0x0AC8      VCVT.S32.F32 S0,S16
   \   00000012   0xEE10 0x0A10      VMOV     R0,S0
   \   00000016   0x.... 0x....      BL       GUI_Long2Len
   \   0000001A   0x1A20             SUBS     R0,R4,R0
   \   0000001C   0x1E41             SUBS     R1,R0,#+1
     78            if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) decrement Decs */
   \   0000001E   0xEEB5 0x8A40      VCMP.F32 S16,#0.0
   \   00000022   0xEEF1 0xFA10      FMSTAT   
   \   00000026   0xD507             BPL.N    ??GUI_DispFloat_0
   \   00000028   0xED9F 0x....      VLDR.W   S0,??DataTable3  ;; 0xbf7ffffe
   \   0000002C   0xEEB4 0x8A40      VCMP.F32 S16,S0
   \   00000030   0xEEF1 0xFA10      FMSTAT   
   \   00000034   0xDB00             BLT.N    ??GUI_DispFloat_0
     79              Decs--;
   \   00000036   0x1E49             SUBS     R1,R1,#+1
     80            }
     81            if (Decs<0)
   \                     ??GUI_DispFloat_0: (+1)
   \   00000038   0x2900             CMP      R1,#+0
   \   0000003A   0xD500             BPL.N    ??GUI_DispFloat_1
     82              Decs =0;
   \   0000003C   0x2100             MOVS     R1,#+0
     83            _DispFloatFix(f, Len, (char)Decs, 0);
   \                     ??GUI_DispFloat_1: (+1)
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0xB249             SXTB     R1,R1
   \   00000042   0x4620             MOV      R0,R4
   \   00000044   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000048   0xECBD 0x8B02      VPOP     {D8}
   \   0000004C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000050   0x....             B.N      _DispFloatFix
     84          }
     85          
     86          /*********************************************************************
     87          *
     88          *       GUI_DispSFloatFix
     89          */

   \                                 In section .text, align 2, keep-with-next
     90          void GUI_DispSFloatFix(float f, char Len, char Fract) {
     91            _DispFloatFix (f, Len, Fract, 1);
   \                     GUI_DispSFloatFix: (+1)
   \   00000000   0x2201             MOVS     R2,#+1
   \   00000002   0xB240             SXTB     R0,R0
   \   00000004   0x....             B.N      _DispFloatFix
     92          }
     93          
     94          /*********************************************************************
     95          *
     96          *       GUI_DispSFloatMin
     97          */

   \                                 In section .text, align 4, keep-with-next
     98          void GUI_DispSFloatMin(float f, char Fract) {
   \                     GUI_DispSFloatMin: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   0000000A   0x4604             MOV      R4,R0
     99            char Len;
    100            Len = GUI_Long2Len((long)f);
   \   0000000C   0xEEBD 0x0AC8      VCVT.S32.F32 S0,S16
   \   00000010   0xEE10 0x0A10      VMOV     R0,S0
   \   00000014   0x.... 0x....      BL       GUI_Long2Len
    101            if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
   \   00000018   0xEEB5 0x8A40      VCMP.F32 S16,#0.0
   \   0000001C   0xEEF1 0xFA10      FMSTAT   
   \   00000020   0xD507             BPL.N    ??GUI_DispSFloatMin_0
   \   00000022   0xED9F 0x....      VLDR.W   S0,??DataTable3  ;; 0xbf7ffffe
   \   00000026   0xEEB4 0x8A40      VCMP.F32 S16,S0
   \   0000002A   0xEEF1 0xFA10      FMSTAT   
   \   0000002E   0xDB00             BLT.N    ??GUI_DispSFloatMin_0
    102              Len++;
   \   00000030   0x1C40             ADDS     R0,R0,#+1
    103            }
    104            if (f>0) {
   \                     ??GUI_DispSFloatMin_0: (+1)
   \   00000032   0xEEB5 0x8A40      VCMP.F32 S16,#0.0
   \   00000036   0xEEF1 0xFA10      FMSTAT   
   \   0000003A   0xDD00             BLE.N    ??GUI_DispSFloatMin_1
    105              Len++;
   \   0000003C   0x1C40             ADDS     R0,R0,#+1
    106            }
    107            _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 1);
   \                     ??GUI_DispSFloatMin_1: (+1)
   \   0000003E   0x4623             MOV      R3,R4
   \   00000040   0xB25B             SXTB     R3,R3
   \   00000042   0x1E5B             SUBS     R3,R3,#+1
   \   00000044   0x419B             SBCS     R3,R3,R3
   \   00000046   0x43DB             MVNS     R3,R3
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x4621             MOV      R1,R4
   \   0000004C   0xB249             SXTB     R1,R1
   \   0000004E   0x1820             ADDS     R0,R4,R0
   \   00000050   0xEB10 0x70D3      ADDS     R0,R0,R3, LSR #+31
   \   00000054   0xB240             SXTB     R0,R0
   \   00000056   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   0000005A   0xECBD 0x8B02      VPOP     {D8}
   \   0000005E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000062   0x....             B.N      _DispFloatFix
    108          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0xBF7FFFFE         DC32     0xbf7ffffe

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     GUI_Pow10
    109          
    110          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   GUI_DispFloat
        16   -> GUI_Long2Len
         0   -> _DispFloatFix
       0   GUI_DispFloatFix
         0   -> _DispFloatFix
      16   GUI_DispFloatMin
        16   -> GUI_Long2Len
         0   -> _DispFloatFix
       0   GUI_DispSFloatFix
         0   -> _DispFloatFix
      16   GUI_DispSFloatMin
        16   -> GUI_Long2Len
         0   -> _DispFloatFix
      16   _DispFloatFix
         0   -> GUI_DispDecShift
         0   -> GUI_DispSDecShift
        16   -> __aeabi_d2f
        16   -> __aeabi_f2d
        16   -> floor


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
      82  GUI_DispFloat
       6  GUI_DispFloatFix
      88  GUI_DispFloatMin
       6  GUI_DispSFloatFix
     100  GUI_DispSFloatMin
      94  _DispFloatFix

 
 384 bytes in section .text
 
 384 bytes of CODE memory

Errors: none
Warnings: none
