###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:15:03
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\rtc.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\rtc.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\rtc.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\rtc.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\rtc.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : RTC.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the RTC instances.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          
     45          /* Includes ------------------------------------------------------------------*/
     46          #include "rtc.h"
     47          
     48          /* USER CODE BEGIN 0 */
     49          
     50          /* USER CODE END 0 */
     51          

   \                                 In section .bss, align 4
     52          RTC_HandleTypeDef hrtc;
   \                     hrtc:
   \   00000000                      DS8 32
     53          
     54          /* RTC init function */

   \                                 In section .text, align 2, keep-with-next
     55          void MX_RTC_Init(void)
     56          {
   \                     MX_RTC_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     57            RTC_TimeTypeDef sTime;
     58            RTC_DateTypeDef sDate;
     59          
     60              /**Initialize RTC Only 
     61              */
     62            hrtc.Instance = RTC;
   \   00000004   0x....             LDR.N    R4,??DataTable2
   \   00000006   0x....             LDR.N    R0,??DataTable2_1  ;; 0x40002800
   \   00000008   0x6020             STR      R0,[R4, #+0]
     63            hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x6060             STR      R0,[R4, #+4]
     64            hrtc.Init.AsynchPrediv = 127;
   \   0000000E   0x207F             MOVS     R0,#+127
   \   00000010   0x60A0             STR      R0,[R4, #+8]
     65            hrtc.Init.SynchPrediv = 255;
   \   00000012   0x20FF             MOVS     R0,#+255
   \   00000014   0x60E0             STR      R0,[R4, #+12]
     66            hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x6120             STR      R0,[R4, #+16]
     67            hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
   \   0000001A   0x6160             STR      R0,[R4, #+20]
     68            hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
   \   0000001C   0x61A0             STR      R0,[R4, #+24]
     69            if (HAL_RTC_Init(&hrtc) != HAL_OK)
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0x.... 0x....      BL       HAL_RTC_Init
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD001             BEQ.N    ??MX_RTC_Init_0
     70            {
     71              Error_Handler();
   \   00000028   0x.... 0x....      BL       Error_Handler
     72            }
     73          
     74              /**Initialize RTC and set the Time and Date 
     75              */
     76            sTime.Hours = 0x0;
   \                     ??MX_RTC_Init_0: (+1)
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xF8AD 0x0004      STRH     R0,[SP, #+4]
     77            sTime.Minutes = 0x0;
     78            sTime.Seconds = 0x0;
   \   00000032   0xF88D 0x0006      STRB     R0,[SP, #+6]
     79            sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
   \   00000036   0x9004             STR      R0,[SP, #+16]
     80            sTime.StoreOperation = RTC_STOREOPERATION_RESET;
   \   00000038   0x9005             STR      R0,[SP, #+20]
     81            if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0xA901             ADD      R1,SP,#+4
   \   0000003E   0x4620             MOV      R0,R4
   \   00000040   0x.... 0x....      BL       HAL_RTC_SetTime
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD001             BEQ.N    ??MX_RTC_Init_1
     82            {
     83              Error_Handler();
   \   00000048   0x.... 0x....      BL       Error_Handler
     84            }
     85          
     86            sDate.WeekDay = RTC_WEEKDAY_MONDAY;
   \                     ??MX_RTC_Init_1: (+1)
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0xF88D 0x0000      STRB     R0,[SP, #+0]
     87            sDate.Month = RTC_MONTH_JANUARY;
   \   00000052   0xF88D 0x0001      STRB     R0,[SP, #+1]
     88            sDate.Date = 0x1;
   \   00000056   0xF88D 0x0002      STRB     R0,[SP, #+2]
     89            sDate.Year = 0x0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0xF88D 0x0003      STRB     R0,[SP, #+3]
     90          
     91            if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
   \   00000060   0x2201             MOVS     R2,#+1
   \   00000062   0xA900             ADD      R1,SP,#+0
   \   00000064   0x4620             MOV      R0,R4
   \   00000066   0x.... 0x....      BL       HAL_RTC_SetDate
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD001             BEQ.N    ??MX_RTC_Init_2
     92            {
     93              Error_Handler();
   \   0000006E   0x.... 0x....      BL       Error_Handler
     94            }
     95          
     96          }
   \                     ??MX_RTC_Init_2: (+1)
   \   00000072   0xB006             ADD      SP,SP,#+24
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
     97          

   \                                 In section .text, align 2, keep-with-next
     98          void HAL_RTC_MspInit(RTC_HandleTypeDef* rtcHandle)
     99          {
    100          
    101            if(rtcHandle->Instance==RTC)
   \                     HAL_RTC_MspInit: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40002800
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD102             BNE.N    ??HAL_RTC_MspInit_0
    102            {
    103            /* USER CODE BEGIN RTC_MspInit 0 */
    104          
    105            /* USER CODE END RTC_MspInit 0 */
    106              /* Peripheral clock enable */
    107              __HAL_RCC_RTC_ENABLE();
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x....             LDR.N    R1,??DataTable2_2  ;; 0x42470e3c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    108            /* USER CODE BEGIN RTC_MspInit 1 */
    109          
    110            /* USER CODE END RTC_MspInit 1 */
    111            }
    112          }
   \                     ??HAL_RTC_MspInit_0: (+1)
   \   0000000E   0x4770             BX       LR               ;; return
    113          

   \                                 In section .text, align 2, keep-with-next
    114          void HAL_RTC_MspDeInit(RTC_HandleTypeDef* rtcHandle)
    115          {
    116          
    117            if(rtcHandle->Instance==RTC)
   \                     HAL_RTC_MspDeInit: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40002800
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD102             BNE.N    ??HAL_RTC_MspDeInit_0
    118            {
    119            /* USER CODE BEGIN RTC_MspDeInit 0 */
    120          
    121            /* USER CODE END RTC_MspDeInit 0 */
    122              /* Peripheral clock disable */
    123              __HAL_RCC_RTC_DISABLE();
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable2_2  ;; 0x42470e3c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    124            }
    125            /* USER CODE BEGIN RTC_MspDeInit 1 */
    126          
    127            /* USER CODE END RTC_MspDeInit 1 */
    128          } 
   \                     ??HAL_RTC_MspDeInit_0: (+1)
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     hrtc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40002800         DC32     0x40002800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x42470E3C         DC32     0x42470e3c
    129          
    130          /* USER CODE BEGIN 1 */
    131          
    132          /* USER CODE END 1 */
    133          
    134          /**
    135            * @}
    136            */
    137          
    138          /**
    139            * @}
    140            */
    141          
    142          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   HAL_RTC_MspDeInit
       0   HAL_RTC_MspInit
      32   MX_RTC_Init
        32   -> Error_Handler
        32   -> HAL_RTC_Init
        32   -> HAL_RTC_SetDate
        32   -> HAL_RTC_SetTime


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
      16  HAL_RTC_MspDeInit
      16  HAL_RTC_MspInit
     118  MX_RTC_Init
      32  hrtc

 
  32 bytes in section .bss
 162 bytes in section .text
 
 162 bytes of CODE memory
  32 bytes of DATA memory

Errors: none
Warnings: none
