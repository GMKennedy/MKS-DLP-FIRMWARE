###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:58:03
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\GUI_ARRAY_DeleteItem.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\GUI_ARRAY_DeleteItem.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUI_ARRAY_DeleteItem.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUI_ARRAY_DeleteItem.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\GUI_ARRAY_DeleteItem.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUI_ARRAY_DeleteItem.c
     16          Purpose     : Array handling routines
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "GUI_ARRAY.h"
     21          #include <string.h>
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          /*********************************************************************
     26          *
     27          *       public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_ARRAY_DeleteItem
     34          *
     35          * Purpose:
     36          *   Eliminate one element in a GUI_ARRAY.
     37          *   This means:
     38          *     - freeing the memory block
     39          *     - moving the last item to the position of the deleted item
     40          *     - possible reducing the size of the memory used for management (opt)
     41          *
     42          */

   \                                 In section .text, align 2, keep-with-next
     43          void GUI_ARRAY_DeleteItem(GUI_ARRAY* pThis, unsigned int Index) {
   \                     GUI_ARRAY_DeleteItem: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4605             MOV      R5,R0
   \   00000004   0x460C             MOV      R4,R1
     44            WM_HMEM ha;
     45            WM_HMEM* pa;
     46            int i;
     47            if (Index < (unsigned)pThis->NumItems) {
   \   00000006   0x8828             LDRH     R0,[R5, #+0]
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD218             BCS.N    ??GUI_ARRAY_DeleteItem_0
     48              ha = pThis->haHandle;
   \   0000000C   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
     49              if (ha) {
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD014             BEQ.N    ??GUI_ARRAY_DeleteItem_0
     50                int NumItems;
     51                WM_LOCK();
     52                pa = (WM_HMEM*) GUI_ALLOC_h2p(ha);
   \   00000014   0x.... 0x....      BL       GUI_ALLOC_h2p
   \   00000018   0x4606             MOV      R6,R0
     53                /* Free the attached item */
     54                GUI_ALLOC_FreePtr(pa + Index);
   \   0000001A   0xEB06 0x0044      ADD      R0,R6,R4, LSL #+1
   \   0000001E   0x.... 0x....      BL       GUI_ALLOC_FreePtr
     55                /* Move the last items to the position of the deleted item */
     56                NumItems = --pThis->NumItems;
   \   00000022   0x8828             LDRH     R0,[R5, #+0]
   \   00000024   0x1E40             SUBS     R0,R0,#+1
   \   00000026   0x8028             STRH     R0,[R5, #+0]
   \   00000028   0xB280             UXTH     R0,R0
     57                for (i = Index; i <= NumItems - 1; i++) {
   \   0000002A   0xE005             B.N      ??GUI_ARRAY_DeleteItem_1
     58                  *(pa + i) = *(pa + i + 1);
   \                     ??GUI_ARRAY_DeleteItem_2: (+1)
   \   0000002C   0xEB06 0x0144      ADD      R1,R6,R4, LSL #+1
   \   00000030   0x8849             LDRH     R1,[R1, #+2]
   \   00000032   0xF826 0x1014      STRH     R1,[R6, R4, LSL #+1]
     59                }
   \   00000036   0x1C64             ADDS     R4,R4,#+1
   \                     ??GUI_ARRAY_DeleteItem_1: (+1)
   \   00000038   0x1E41             SUBS     R1,R0,#+1
   \   0000003A   0x42A1             CMP      R1,R4
   \   0000003C   0xDAF6             BGE.N    ??GUI_ARRAY_DeleteItem_2
     60                WM_UNLOCK();
     61              }
     62            }
     63          }
   \                     ??GUI_ARRAY_DeleteItem_0: (+1)
   \   0000003E   0xBD70             POP      {R4-R6,PC}       ;; return
     64          
     65          #else
     66          
     67          void GUI_ARRAY_DeleteItem(void) {}
     68          
     69          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   GUI_ARRAY_DeleteItem
        16   -> GUI_ALLOC_FreePtr
        16   -> GUI_ALLOC_h2p


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      64  GUI_ARRAY_DeleteItem

 
 64 bytes in section .text
 
 64 bytes of CODE memory

Errors: none
Warnings: none
