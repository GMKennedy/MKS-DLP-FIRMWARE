###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:59:16
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Popup.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Popup.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\MENU_Popup.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\MENU_Popup.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\Widget\MENU_Popup.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : MENU_Popup.c
     16          Purpose     : Implementation of menu widget
     17          ---------------------------END-OF-HEADER------------------------------
     18          */
     19          
     20          #include "MENU.h"
     21          #include "MENU_Private.h"
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       MENU_Popup
     34          */

   \                                 In section .text, align 2, keep-with-next
     35          void MENU_Popup(MENU_Handle hObj, WM_HWIN hDestWin, int x, int y, int xSize, int ySize, int Flags) {
   \                     MENU_Popup: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0x461F             MOV      R7,R3
     36            GUI_USE_PARA(Flags);
     37            if (hObj && hDestWin) {
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD032             BEQ.N    ??MENU_Popup_0
   \   0000000E   0x2D00             CMP      R5,#+0
   \   00000010   0xD030             BEQ.N    ??MENU_Popup_0
     38              MENU_Obj* pObj;
     39              WM_LOCK();
     40              pObj = MENU_H2P(hObj);
   \   00000012   0x.... 0x....      BL       GUI_ALLOC_h2p
     41              if (pObj) {
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD02C             BEQ.N    ??MENU_Popup_0
     42                pObj->Flags  |= MENU_SF_POPUP;
   \   0000001A   0xF8B0 0x105E      LDRH     R1,[R0, #+94]
   \   0000001E   0xF041 0x0180      ORR      R1,R1,#0x80
   \   00000022   0xF8A0 0x105E      STRH     R1,[R0, #+94]
   \   00000026   0x9906             LDR      R1,[SP, #+24]
     43                pObj->Width   = ((xSize > 0) ? xSize : 0);
   \   00000028   0x2901             CMP      R1,#+1
   \   0000002A   0xDA00             BGE.N    ??MENU_Popup_1
   \   0000002C   0x2100             MOVS     R1,#+0
   \                     ??MENU_Popup_1: (+1)
   \   0000002E   0x6641             STR      R1,[R0, #+100]
   \   00000030   0x9907             LDR      R1,[SP, #+28]
     44                pObj->Height  = ((ySize > 0) ? ySize : 0);
   \   00000032   0x2901             CMP      R1,#+1
   \   00000034   0xDA00             BGE.N    ??MENU_Popup_2
   \   00000036   0x2100             MOVS     R1,#+0
   \                     ??MENU_Popup_2: (+1)
   \   00000038   0x6681             STR      R1,[R0, #+104]
     45                x            += WM_GetWindowOrgX(hDestWin);
   \   0000003A   0x4628             MOV      R0,R5
   \   0000003C   0x.... 0x....      BL       WM_GetWindowOrgX
   \   00000040   0x1986             ADDS     R6,R0,R6
     46                y            += WM_GetWindowOrgY(hDestWin);
   \   00000042   0x4628             MOV      R0,R5
   \   00000044   0x.... 0x....      BL       WM_GetWindowOrgY
   \   00000048   0x19C7             ADDS     R7,R0,R7
     47                MENU_SetOwner(hObj, hDestWin);
   \   0000004A   0x4629             MOV      R1,R5
   \   0000004C   0x4620             MOV      R0,R4
   \   0000004E   0x.... 0x....      BL       MENU_SetOwner
     48                WM_AttachWindowAt(hObj, WM_HBKWIN, x, y);
   \   00000052   0x.... 0x....      BL       WM_GetDesktopWindow
   \   00000056   0x4601             MOV      R1,R0
   \   00000058   0x463B             MOV      R3,R7
   \   0000005A   0x4632             MOV      R2,R6
   \   0000005C   0x4620             MOV      R0,R4
   \   0000005E   0x.... 0x....      BL       WM_AttachWindowAt
     49                MENU__SendMenuMessage(hDestWin, hObj, MENU_ON_OPEN, 0);
   \   00000062   0x2300             MOVS     R3,#+0
   \   00000064   0x2203             MOVS     R2,#+3
   \   00000066   0x4621             MOV      R1,R4
   \   00000068   0x4628             MOV      R0,R5
   \   0000006A   0xB001             ADD      SP,SP,#+4
   \   0000006C   0xE8BD 0x40F0      POP      {R4-R7,LR}
   \   00000070   0x.... 0x....      B.W      MENU__SendMenuMessage
     50              }
     51              WM_UNLOCK();
     52            }
     53          }
   \                     ??MENU_Popup_0: (+1)
   \   00000074   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     54          
     55          #else  /* avoid empty object files */
     56            void MENU_Popup_C(void) {}
     57          #endif
     58          
     59          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   MENU_Popup
        24   -> GUI_ALLOC_h2p
        24   -> MENU_SetOwner
         0   -> MENU__SendMenuMessage
        24   -> WM_AttachWindowAt
        24   -> WM_GetDesktopWindow
        24   -> WM_GetWindowOrgX
        24   -> WM_GetWindowOrgY


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     118  MENU_Popup

 
 118 bytes in section .text
 
 118 bytes of CODE memory

Errors: none
Warnings: none
