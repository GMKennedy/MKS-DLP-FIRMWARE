###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  11:15:04
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\sdio.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\sdio.c -D
#        USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\sdio.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\sdio.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Src\sdio.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : SDIO.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the SDIO instances.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2016 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          
     45          /* Includes ------------------------------------------------------------------*/
     46          #include "sdio.h"
     47          
     48          #include "gpio.h"
     49          #include "dma.h"
     50          
     51          /* USER CODE BEGIN 0 */
     52          
     53          /* USER CODE END 0 */
     54          

   \                                 In section .bss, align 4
     55          SD_HandleTypeDef hsd;
   \                     hsd:
   \   00000000                      DS8 96

   \                                 In section .bss, align 8
     56          HAL_SD_CardInfoTypedef SDCardInfo;
   \                     SDCardInfo:
   \   00000000                      DS8 88

   \                                 In section .bss, align 4
     57          DMA_HandleTypeDef hdma_sdio_rx;
   \                     hdma_sdio_rx:
   \   00000000                      DS8 96
     58          DMA_HandleTypeDef hdma_sdio_tx;
   \                     hdma_sdio_tx:
   \   00000060                      DS8 96
     59          
     60          /* SDIO init function */
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void MX_SDIO_SD_Init(void)
     63          {
     64          
     65            hsd.Instance = SDIO;
   \                     MX_SDIO_SD_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2
   \   00000002   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40012c00
   \   00000004   0x6001             STR      R1,[R0, #+0]
     66            hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x6041             STR      R1,[R0, #+4]
     67            hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
   \   0000000A   0x6081             STR      R1,[R0, #+8]
     68            hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
     69            hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
   \   0000000E   0x6101             STR      R1,[R0, #+16]
     70            hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
   \   00000010   0x6141             STR      R1,[R0, #+20]
     71            hsd.Init.ClockDiv = 4;//0;
   \   00000012   0x2104             MOVS     R1,#+4
   \   00000014   0x6181             STR      R1,[R0, #+24]
     72          
     73          }
   \   00000016   0x4770             BX       LR               ;; return
     74          

   \                                 In section .text, align 2, keep-with-next
     75          void HAL_SD_MspInit(SD_HandleTypeDef* sdHandle)
     76          {
   \                     HAL_SD_MspInit: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB087             SUB      SP,SP,#+28
   \   00000006   0x4604             MOV      R4,R0
     77          
     78            GPIO_InitTypeDef GPIO_InitStruct;
     79            if(sdHandle->Instance==SDIO)
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40012c00
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xF040 0x8087      BNE.W    ??HAL_SD_MspInit_0
     80            {
     81            /* USER CODE BEGIN SDIO_MspInit 0 */
     82          
     83            /* USER CODE END SDIO_MspInit 0 */
     84              /* Peripheral clock enable */
     85              __HAL_RCC_SDIO_CLK_ENABLE();
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9000             STR      R0,[SP, #+0]
   \   00000016   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40023844
   \   00000018   0x6801             LDR      R1,[R0, #+0]
   \   0000001A   0xF441 0x6100      ORR      R1,R1,#0x800
   \   0000001E   0x6001             STR      R1,[R0, #+0]
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF400 0x6000      AND      R0,R0,#0x800
   \   00000026   0x9000             STR      R0,[SP, #+0]
   \   00000028   0x9800             LDR      R0,[SP, #+0]
     86            
     87              /**SDIO GPIO Configuration    
     88              PC8     ------> SDIO_D0
     89              PC9     ------> SDIO_D1
     90              PC10     ------> SDIO_D2
     91              PC11     ------> SDIO_D3
     92              PC12     ------> SDIO_CK
     93              PD2     ------> SDIO_CMD 
     94              */
     95              GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
     96                                    |GPIO_PIN_12;
   \   0000002A   0xF44F 0x50F8      MOV      R0,#+7936
   \   0000002E   0x9001             STR      R0,[SP, #+4]
     97              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x9002             STR      R0,[SP, #+8]
     98              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x9003             STR      R0,[SP, #+12]
     99              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000038   0x2003             MOVS     R0,#+3
   \   0000003A   0x9004             STR      R0,[SP, #+16]
    100              GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
   \   0000003C   0x200C             MOVS     R0,#+12
   \   0000003E   0x9005             STR      R0,[SP, #+20]
    101              HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   00000040   0xA901             ADD      R1,SP,#+4
   \   00000042   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40020800
   \   00000044   0x.... 0x....      BL       HAL_GPIO_Init
    102          
    103              GPIO_InitStruct.Pin = GPIO_PIN_2;
   \   00000048   0x2004             MOVS     R0,#+4
   \   0000004A   0x9001             STR      R0,[SP, #+4]
    104              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   0000004C   0x2002             MOVS     R0,#+2
   \   0000004E   0x9002             STR      R0,[SP, #+8]
    105              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x9003             STR      R0,[SP, #+12]
    106              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
   \   00000054   0x2003             MOVS     R0,#+3
   \   00000056   0x9004             STR      R0,[SP, #+16]
    107              GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
   \   00000058   0x200C             MOVS     R0,#+12
   \   0000005A   0x9005             STR      R0,[SP, #+20]
    108              HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \   0000005C   0xA901             ADD      R1,SP,#+4
   \   0000005E   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40020c00
   \   00000060   0x.... 0x....      BL       HAL_GPIO_Init
    109          
    110              /* Peripheral DMA init*/
    111            
    112              hdma_sdio_rx.Instance = DMA2_Stream3;
   \   00000064   0x....             LDR.N    R5,??DataTable2_5
   \   00000066   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40026458
   \   00000068   0x6028             STR      R0,[R5, #+0]
    113              hdma_sdio_rx.Init.Channel = DMA_CHANNEL_4;
   \   0000006A   0xF04F 0x6600      MOV      R6,#+134217728
   \   0000006E   0x606E             STR      R6,[R5, #+4]
    114              hdma_sdio_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x60A8             STR      R0,[R5, #+8]
    115              hdma_sdio_rx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   00000074   0x60E8             STR      R0,[R5, #+12]
    116              hdma_sdio_rx.Init.MemInc = DMA_MINC_ENABLE;
   \   00000076   0xF44F 0x6780      MOV      R7,#+1024
   \   0000007A   0x612F             STR      R7,[R5, #+16]
    117              hdma_sdio_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
   \   0000007C   0xF44F 0x5880      MOV      R8,#+4096
   \   00000080   0xF8C5 0x8014      STR      R8,[R5, #+20]
    118              hdma_sdio_rx.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
   \   00000084   0xF44F 0x4980      MOV      R9,#+16384
   \   00000088   0xF8C5 0x9018      STR      R9,[R5, #+24]
    119              hdma_sdio_rx.Init.Mode = DMA_PFCTRL;
   \   0000008C   0x2020             MOVS     R0,#+32
   \   0000008E   0x61E8             STR      R0,[R5, #+28]
    120              hdma_sdio_rx.Init.Priority = DMA_PRIORITY_LOW;
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x6228             STR      R0,[R5, #+32]
    121              hdma_sdio_rx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
   \   00000094   0x2004             MOVS     R0,#+4
   \   00000096   0x6268             STR      R0,[R5, #+36]
    122              hdma_sdio_rx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   00000098   0x2003             MOVS     R0,#+3
   \   0000009A   0x62A8             STR      R0,[R5, #+40]
    123              hdma_sdio_rx.Init.MemBurst = DMA_MBURST_INC4;
   \   0000009C   0xF44F 0x0A00      MOV      R10,#+8388608
   \   000000A0   0xF8C5 0xA02C      STR      R10,[R5, #+44]
    124              hdma_sdio_rx.Init.PeriphBurst = DMA_PBURST_INC4;
   \   000000A4   0xF44F 0x1B00      MOV      R11,#+2097152
   \   000000A8   0xF8C5 0xB030      STR      R11,[R5, #+48]
    125              if (HAL_DMA_Init(&hdma_sdio_rx) != HAL_OK)
   \   000000AC   0x4628             MOV      R0,R5
   \   000000AE   0x.... 0x....      BL       HAL_DMA_Init
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD001             BEQ.N    ??HAL_SD_MspInit_1
    126              {
    127                Error_Handler();
   \   000000B6   0x.... 0x....      BL       Error_Handler
    128              }
    129          
    130              __HAL_LINKDMA(sdHandle,hdmarx,hdma_sdio_rx);
   \                     ??HAL_SD_MspInit_1: (+1)
   \   000000BA   0x65A5             STR      R5,[R4, #+88]
   \   000000BC   0x63AC             STR      R4,[R5, #+56]
    131          
    132              hdma_sdio_tx.Instance = DMA2_Stream6;
   \   000000BE   0x....             LDR.N    R0,??DataTable2_6  ;; 0x40026458
   \   000000C0   0x3048             ADDS     R0,R0,#+72
   \   000000C2   0x6628             STR      R0,[R5, #+96]
    133              hdma_sdio_tx.Init.Channel = DMA_CHANNEL_4;
   \   000000C4   0x666E             STR      R6,[R5, #+100]
    134              hdma_sdio_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
   \   000000C6   0x2040             MOVS     R0,#+64
   \   000000C8   0x66A8             STR      R0,[R5, #+104]
    135              hdma_sdio_tx.Init.PeriphInc = DMA_PINC_DISABLE;
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x66E8             STR      R0,[R5, #+108]
    136              hdma_sdio_tx.Init.MemInc = DMA_MINC_ENABLE;
   \   000000CE   0x672F             STR      R7,[R5, #+112]
    137              hdma_sdio_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
   \   000000D0   0xF8C5 0x8074      STR      R8,[R5, #+116]
    138              hdma_sdio_tx.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
   \   000000D4   0xF8C5 0x9078      STR      R9,[R5, #+120]
    139              hdma_sdio_tx.Init.Mode = DMA_PFCTRL;
   \   000000D8   0x2020             MOVS     R0,#+32
   \   000000DA   0x67E8             STR      R0,[R5, #+124]
    140              hdma_sdio_tx.Init.Priority = DMA_PRIORITY_LOW;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0xF8C5 0x0080      STR      R0,[R5, #+128]
    141              hdma_sdio_tx.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
   \   000000E2   0x2004             MOVS     R0,#+4
   \   000000E4   0xF8C5 0x0084      STR      R0,[R5, #+132]
    142              hdma_sdio_tx.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
   \   000000E8   0x2003             MOVS     R0,#+3
   \   000000EA   0xF8C5 0x0088      STR      R0,[R5, #+136]
    143              hdma_sdio_tx.Init.MemBurst = DMA_MBURST_INC4;
   \   000000EE   0xF8C5 0xA08C      STR      R10,[R5, #+140]
    144              hdma_sdio_tx.Init.PeriphBurst = DMA_PBURST_INC4;
   \   000000F2   0xF8C5 0xB090      STR      R11,[R5, #+144]
    145              if (HAL_DMA_Init(&hdma_sdio_tx) != HAL_OK)
   \   000000F6   0xF105 0x0060      ADD      R0,R5,#+96
   \   000000FA   0x.... 0x....      BL       HAL_DMA_Init
   \   000000FE   0x2800             CMP      R0,#+0
   \   00000100   0xD001             BEQ.N    ??HAL_SD_MspInit_2
    146              {
    147                Error_Handler();
   \   00000102   0x.... 0x....      BL       Error_Handler
    148              }
    149          
    150              __HAL_LINKDMA(sdHandle,hdmatx,hdma_sdio_tx);
   \                     ??HAL_SD_MspInit_2: (+1)
   \   00000106   0xF105 0x0060      ADD      R0,R5,#+96
   \   0000010A   0x65E0             STR      R0,[R4, #+92]
   \   0000010C   0xF8C5 0x4098      STR      R4,[R5, #+152]
    151          #if 1
    152              /* Peripheral interrupt init */
    153              HAL_NVIC_SetPriority(SDIO_IRQn, 3, 0);
   \   00000110   0x2200             MOVS     R2,#+0
   \   00000112   0x2103             MOVS     R1,#+3
   \   00000114   0x2031             MOVS     R0,#+49
   \   00000116   0x.... 0x....      BL       HAL_NVIC_SetPriority
    154              HAL_NVIC_EnableIRQ(SDIO_IRQn);    
   \   0000011A   0x2031             MOVS     R0,#+49
   \   0000011C   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    155          #endif    
    156            /* USER CODE BEGIN SDIO_MspInit 1 */
    157          
    158            /* USER CODE END SDIO_MspInit 1 */
    159            }
    160          }
   \                     ??HAL_SD_MspInit_0: (+1)
   \   00000120   0xB007             ADD      SP,SP,#+28
   \   00000122   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    161          

   \                                 In section .text, align 2, keep-with-next
    162          void HAL_SD_MspDeInit(SD_HandleTypeDef* sdHandle)
    163          {
   \                     HAL_SD_MspDeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    164          
    165            if(sdHandle->Instance==SDIO)
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40012c00
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD118             BNE.N    ??HAL_SD_MspDeInit_0
    166            {
    167            /* USER CODE BEGIN SDIO_MspDeInit 0 */
    168          
    169            /* USER CODE END SDIO_MspDeInit 0 */
    170              /* Peripheral clock disable */
    171              __HAL_RCC_SDIO_CLK_DISABLE();
   \   0000000C   0x....             LDR.N    R0,??DataTable2_2  ;; 0x40023844
   \   0000000E   0x6801             LDR      R1,[R0, #+0]
   \   00000010   0xF421 0x6100      BIC      R1,R1,#0x800
   \   00000014   0x6001             STR      R1,[R0, #+0]
    172            
    173              /**SDIO GPIO Configuration    
    174              PC8     ------> SDIO_D0
    175              PC9     ------> SDIO_D1
    176              PC10     ------> SDIO_D2
    177              PC11     ------> SDIO_D3
    178              PC12     ------> SDIO_CK
    179              PD2     ------> SDIO_CMD 
    180              */
    181              HAL_GPIO_DeInit(GPIOC, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
    182                                    |GPIO_PIN_12);
   \   00000016   0xF44F 0x51F8      MOV      R1,#+7936
   \   0000001A   0x....             LDR.N    R0,??DataTable2_3  ;; 0x40020800
   \   0000001C   0x.... 0x....      BL       HAL_GPIO_DeInit
    183          
    184              HAL_GPIO_DeInit(GPIOD, GPIO_PIN_2);
   \   00000020   0x2104             MOVS     R1,#+4
   \   00000022   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40020c00
   \   00000024   0x.... 0x....      BL       HAL_GPIO_DeInit
    185          
    186              /* Peripheral DMA DeInit*/
    187              HAL_DMA_DeInit(sdHandle->hdmarx);
   \   00000028   0x6DA0             LDR      R0,[R4, #+88]
   \   0000002A   0x.... 0x....      BL       HAL_DMA_DeInit
    188              HAL_DMA_DeInit(sdHandle->hdmatx);
   \   0000002E   0x6DE0             LDR      R0,[R4, #+92]
   \   00000030   0x.... 0x....      BL       HAL_DMA_DeInit
    189          #if 1
    190              /* Peripheral interrupt Deinit*/
    191              HAL_NVIC_DisableIRQ(SDIO_IRQn);
   \   00000034   0x2031             MOVS     R0,#+49
   \   00000036   0xE8BD 0x4010      POP      {R4,LR}
   \   0000003A   0x.... 0x....      B.W      HAL_NVIC_DisableIRQ
    192          #endif
    193            }
    194            /* USER CODE BEGIN SDIO_MspDeInit 1 */
    195          
    196            /* USER CODE END SDIO_MspDeInit 1 */
    197          } 
   \                     ??HAL_SD_MspDeInit_0: (+1)
   \   0000003E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     hsd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40012C00         DC32     0x40012c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40023844         DC32     0x40023844

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     hdma_sdio_rx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40026458         DC32     0x40026458
    198          
    199          /* USER CODE BEGIN 1 */
    200          
    201          /* USER CODE END 1 */
    202          
    203          /**
    204            * @}
    205            */
    206          
    207          /**
    208            * @}
    209            */
    210          
    211          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HAL_SD_MspDeInit
         8   -> HAL_DMA_DeInit
         8   -> HAL_GPIO_DeInit
         0   -> HAL_NVIC_DisableIRQ
      64   HAL_SD_MspInit
        64   -> Error_Handler
        64   -> HAL_DMA_Init
        64   -> HAL_GPIO_Init
        64   -> HAL_NVIC_EnableIRQ
        64   -> HAL_NVIC_SetPriority
       0   MX_SDIO_SD_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
      64  HAL_SD_MspDeInit
     294  HAL_SD_MspInit
      24  MX_SDIO_SD_Init
      88  SDCardInfo
     192  hdma_sdio_rx
          hdma_sdio_tx
      96  hsd

 
 376 bytes in section .bss
 410 bytes in section .text
 
 410 bytes of CODE memory
 376 bytes of DATA memory

Errors: none
Warnings: none
