###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Jul/2019  10:19:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_ProgBar.c
#    Command line =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_ProgBar.c
#        -D USE_HAL_DRIVER -D STM32F407xx -D STM32F40_41xxx -D USE_HAL_LIB -D
#        MKS_DLP_BOARD -D TFT35 -lC
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\ -lA
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\
#        --diag_suppress Pa050 -o
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4F -e --char_is_signed --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Inc\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Src\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Device/ST/STM32F4xx/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/Third_Party/Marlin\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/ssd2828\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertColor\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/ConvertMono\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Core\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Font\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/AntiAlias\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/GUIDemo\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/LCDDriver\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MemDev\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/MultiLayer\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/Widget\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI/WM\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/GUI_X\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../Middlewares/gui/Config\
#        -I E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui\ -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/Multi_language\
#        -I
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM/../User/ui/QRENCODE\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/List\GUIDEMO_ProgBar.lst
#    Object file  =  
#        E:\DLP_Proj\DLP_source\branches\DLP_opensource\EWARM\mksDLP/Obj\GUIDEMO_ProgBar.o
#
###############################################################################

E:\DLP_Proj\DLP_source\branches\DLP_opensource\Middlewares\gui\GUI\GUIDemo\GUIDEMO_ProgBar.c
      1          /*
      2          *********************************************************************************************************
      3          *                                                uC/GUI
      4          *                        Universal graphic software for embedded applications
      5          *
      6          *                       (c) Copyright 2002, Micrium Inc., Weston, FL
      7          *                       (c) Copyright 2002, SEGGER Microcontroller Systeme GmbH
      8          *
      9          *              µC/GUI is protected by international copyright laws. Knowledge of the
     10          *              source code may not be used to write a similar product. This file may
     11          *              only be used in accordance with a license and should not be redistributed
     12          *              in any way. We appreciate your understanding and fairness.
     13          *
     14          ----------------------------------------------------------------------
     15          File        : GUIDEMO_DemoProgBar.c
     16          Purpose     : Progress bar demo
     17          ----------------------------------------------------------------------
     18          */
     19          
     20          #include "GUI.h"
     21          #include "GUIDEMO.h"
     22          
     23          #if GUI_WINSUPPORT
     24          
     25          #include "PROGBAR.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       GUIDEMO_DemoProgBar
     30          *
     31          **********************************************************************
     32          */
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void GUIDEMO_DemoProgBar(void) {
   \                     GUIDEMO_DemoProgBar: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
     35            PROGBAR_Handle ahProgBar[2];
     36            int i, iRep;
     37            int XMid = LCD_GetXSize() / 2;
   \   00000004   0x.... 0x....      BL       LCD_GetXSize
   \   00000008   0xEB00 0x70D0      ADD      R0,R0,R0, LSR #+31
   \   0000000C   0x1045             ASRS     R5,R0,#+1
     38            int YMid = LCD_GetYSize() / 2;
   \   0000000E   0x.... 0x....      BL       LCD_GetYSize
   \   00000012   0xEB00 0x70D0      ADD      R0,R0,R0, LSR #+31
   \   00000016   0x1046             ASRS     R6,R0,#+1
     39            #if GUIDEMO_LARGE
     40              int MaxReps = 2;
     41              int Length[2] = {110, 140};
     42              int Height[2] = {20, 10};
   \   00000018   0xF04F 0x0814      MOV      R8,#+20
     43              int y0 = YMid - 40;
   \   0000001C   0xF1A6 0x0928      SUB      R9,R6,#+40
     44              int dy = 10;
   \   00000020   0x270A             MOVS     R7,#+10
     45            #elif !(GUIDEMO_TINY)
     46              int MaxReps = 1;
     47              int Length[2] = {100, 130};
     48              int Height[2] = {18, 10};
     49              int y0 = YMid - 38;
     50              int dy = 9;
     51            #else
     52              int MaxReps = 1;
     53              int Length[2] = {85, 115};
     54              int Height[2] = {16, 8};
     55              int y0 = YMid - 35;
     56              int dy = 8;
     57            #endif
     58            if (YMid < 40) {
   \   00000022   0x2E28             CMP      R6,#+40
   \   00000024   0xDA04             BGE.N    ??GUIDEMO_DemoProgBar_0
     59              Height[0] = 14;
   \   00000026   0xF04F 0x080E      MOV      R8,#+14
     60              y0 = 1;
   \   0000002A   0xF04F 0x0901      MOV      R9,#+1
     61              dy = 4;
   \   0000002E   0x2704             MOVS     R7,#+4
     62            }
     63            GUIDEMO_ShowIntro("Widgets", 
     64                              "\nProgressbars in"
     65                              "\nall variations");
   \                     ??GUIDEMO_DemoProgBar_0: (+1)
   \   00000030   0x.... 0x....      ADR.W    R1,`?<Constant "\\nProgressbars in\\nall ...">`
   \   00000034   0x.... 0x....      ADR.W    R0,`?<Constant "Widgets">`
   \   00000038   0x.... 0x....      BL       GUIDEMO_ShowIntro
     66            GUI_Clear();
   \   0000003C   0x.... 0x....      BL       GUI_Clear
     67            GUI_SetColor(GUI_WHITE);
   \   00000040   0xF06F 0x407F      MVN      R0,#-16777216
   \   00000044   0x.... 0x....      BL       GUI_SetColor
     68            GUI_SetFont(&GUI_Font8x16);
   \   00000048   0x....             LDR.N    R4,??DataTable6
   \   0000004A   0x4620             MOV      R0,R4
   \   0000004C   0x.... 0x....      BL       GUI_SetFont
     69            GUI_DispStringHCenterAt("Progress bar", XMid, y0);
   \   00000050   0x464A             MOV      R2,R9
   \   00000052   0x4629             MOV      R1,R5
   \   00000054   0x.... 0x....      ADR.W    R0,`?<Constant "Progress bar">`
   \   00000058   0x.... 0x....      BL       GUI_DispStringHCenterAt
     70            /* Create `em */  
     71            ahProgBar[0] = PROGBAR_Create(XMid - Length[0] / 2,
     72                                          YMid - Height[0],
     73                                          Length[0], 
     74                                          Height[0], 
     75                                          WM_CF_SHOW);
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x9000             STR      R0,[SP, #+0]
   \   00000060   0x4643             MOV      R3,R8
   \   00000062   0x226E             MOVS     R2,#+110
   \   00000064   0xEBA6 0x0108      SUB      R1,R6,R8
   \   00000068   0xF1A5 0x0037      SUB      R0,R5,#+55
   \   0000006C   0x.... 0x....      BL       PROGBAR_Create
   \   00000070   0x4680             MOV      R8,R0
     76            ahProgBar[1] = PROGBAR_Create(XMid - Length[1] / 2,
     77                                          YMid + dy,
     78                                          Length[1], 
     79                                          Height[1], 
     80                                          WM_CF_SHOW);
   \   00000072   0x2002             MOVS     R0,#+2
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x230A             MOVS     R3,#+10
   \   00000078   0x228C             MOVS     R2,#+140
   \   0000007A   0x19B9             ADDS     R1,R7,R6
   \   0000007C   0xF1A5 0x0046      SUB      R0,R5,#+70
   \   00000080   0x.... 0x....      BL       PROGBAR_Create
   \   00000084   0x4605             MOV      R5,R0
     81            /* Use memory device (optional, for better looks) */
     82            #if GUI_SUPPORT_MEMDEV
     83              PROGBAR_EnableMemdev(ahProgBar[0]);
     84              PROGBAR_EnableMemdev(ahProgBar[1]);
     85            #endif
     86            GUIDEMO_Delay (800);
   \   00000086   0xF44F 0x7048      MOV      R0,#+800
   \   0000008A   0x.... 0x....      BL       GUIDEMO_Delay
     87            PROGBAR_SetMinMax(ahProgBar[1], 0, 500);
   \   0000008E   0xF44F 0x72FA      MOV      R2,#+500
   \   00000092   0x2100             MOVS     R1,#+0
   \   00000094   0x4628             MOV      R0,R5
   \   00000096   0x.... 0x....      BL       PROGBAR_SetMinMax
     88            for (iRep = 0; iRep < MaxReps; iRep++) {
   \   0000009A   0x2600             MOVS     R6,#+0
   \   0000009C   0xE017             B.N      ??GUIDEMO_DemoProgBar_1
     89              #if !(GUIDEMO_TINY)
     90                PROGBAR_SetFont(ahProgBar[0], &GUI_Font8x16);
     91              #endif
     92              #if   (LCD_BITSPERPIXEL == 2)
     93                PROGBAR_SetBarColor(ahProgBar[0], 0, GUI_DARKGRAY);
     94                PROGBAR_SetBarColor(ahProgBar[1], 0, GUI_DARKGRAY);
     95                PROGBAR_SetBarColor(ahProgBar[0], 1, GUI_WHITE);
     96                PROGBAR_SetBarColor(ahProgBar[1], 1, GUI_WHITE);
     97              #elif (LCD_BITSPERPIXEL <= 4)
     98                PROGBAR_SetBarColor(ahProgBar[0], 0, GUI_DARKGRAY);
     99                PROGBAR_SetBarColor(ahProgBar[0], 1, GUI_LIGHTGRAY);
    100              #else
    101                PROGBAR_SetBarColor(ahProgBar[0], 0, GUI_GREEN);
    102                PROGBAR_SetBarColor(ahProgBar[0], 1, GUI_RED);
    103              #endif
    104              for (i = 0; (i <= 100) && !GUIDEMO_CheckCancel(); i++) {
    105                PROGBAR_SetValue(ahProgBar[0], i);
    106                PROGBAR_SetValue(ahProgBar[1], i);
    107                GUI_Delay(5);
    108              }
    109              PROGBAR_SetText(ahProgBar[0], "Tank empty");
    110              for (; (i >= 0)&& !GUIDEMO_CheckCancel(); i--) {
    111                PROGBAR_SetValue(ahProgBar[0], i);
    112                PROGBAR_SetValue(ahProgBar[1], 200 - i);
    113                GUI_Delay(5);
    114              }
    115              PROGBAR_SetText(ahProgBar[0], "Any text ...");
    116              PROGBAR_SetTextAlign(ahProgBar[0], GUI_TA_LEFT);
    117              for (; (i <= 100)&& !GUIDEMO_CheckCancel(); i++) {
    118                PROGBAR_SetValue(ahProgBar[0], i);
    119                PROGBAR_SetValue(ahProgBar[1], 200 + i);
    120                GUI_Delay(5);
    121              }
    122              for (; (i >= 0)&& !GUIDEMO_CheckCancel(); i--) {
    123                PROGBAR_SetValue(ahProgBar[0], i);
    124                PROGBAR_SetValue(ahProgBar[1], 400 - i);
    125                GUI_Delay(5);
    126              }
    127              PROGBAR_SetFont(ahProgBar[0], &GUI_FontComic18B_1);
    128              PROGBAR_SetText(ahProgBar[0], "Any font ...");
    129              for (; (i <= 100)&& !GUIDEMO_CheckCancel(); i++) {
    130                PROGBAR_SetValue(ahProgBar[0], i);
   \                     ??GUIDEMO_DemoProgBar_2: (+1)
   \   0000009E   0x4639             MOV      R1,R7
   \   000000A0   0x4640             MOV      R0,R8
   \   000000A2   0x.... 0x....      BL       PROGBAR_SetValue
    131                PROGBAR_SetValue(ahProgBar[1], 400 + i);
   \   000000A6   0xF507 0x71C8      ADD      R1,R7,#+400
   \   000000AA   0x4628             MOV      R0,R5
   \   000000AC   0x.... 0x....      BL       PROGBAR_SetValue
    132                GUI_Delay(5);
   \   000000B0   0x2005             MOVS     R0,#+5
   \   000000B2   0x.... 0x....      BL       GUI_Delay
    133              }
   \   000000B6   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GUIDEMO_DemoProgBar_3: (+1)
   \   000000B8   0x2F65             CMP      R7,#+101
   \   000000BA   0xDA03             BGE.N    ??GUIDEMO_DemoProgBar_4
   \   000000BC   0x.... 0x....      BL       GUIDEMO_CheckCancel
   \   000000C0   0x2800             CMP      R0,#+0
   \   000000C2   0xD0EC             BEQ.N    ??GUIDEMO_DemoProgBar_2
    134              GUIDEMO_Delay(1000);
   \                     ??GUIDEMO_DemoProgBar_4: (+1)
   \   000000C4   0xF44F 0x707A      MOV      R0,#+1000
   \   000000C8   0x.... 0x....      BL       GUIDEMO_Delay
   \   000000CC   0x1C76             ADDS     R6,R6,#+1
   \                     ??GUIDEMO_DemoProgBar_1: (+1)
   \   000000CE   0x2E02             CMP      R6,#+2
   \   000000D0   0xDA76             BGE.N    ??GUIDEMO_DemoProgBar_5
   \   000000D2   0x4621             MOV      R1,R4
   \   000000D4   0x4640             MOV      R0,R8
   \   000000D6   0x.... 0x....      BL       PROGBAR_SetFont
   \   000000DA   0xF44F 0x427F      MOV      R2,#+65280
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0x4640             MOV      R0,R8
   \   000000E2   0x.... 0x....      BL       PROGBAR_SetBarColor
   \   000000E6   0x22FF             MOVS     R2,#+255
   \   000000E8   0x2101             MOVS     R1,#+1
   \   000000EA   0x4640             MOV      R0,R8
   \   000000EC   0x.... 0x....      BL       PROGBAR_SetBarColor
   \   000000F0   0x2700             MOVS     R7,#+0
   \   000000F2   0xE00B             B.N      ??GUIDEMO_DemoProgBar_6
   \                     ??GUIDEMO_DemoProgBar_7: (+1)
   \   000000F4   0x4639             MOV      R1,R7
   \   000000F6   0x4640             MOV      R0,R8
   \   000000F8   0x.... 0x....      BL       PROGBAR_SetValue
   \   000000FC   0x4639             MOV      R1,R7
   \   000000FE   0x4628             MOV      R0,R5
   \   00000100   0x.... 0x....      BL       PROGBAR_SetValue
   \   00000104   0x2005             MOVS     R0,#+5
   \   00000106   0x.... 0x....      BL       GUI_Delay
   \   0000010A   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GUIDEMO_DemoProgBar_6: (+1)
   \   0000010C   0x2F65             CMP      R7,#+101
   \   0000010E   0xDA03             BGE.N    ??GUIDEMO_DemoProgBar_8
   \   00000110   0x.... 0x....      BL       GUIDEMO_CheckCancel
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD0ED             BEQ.N    ??GUIDEMO_DemoProgBar_7
   \                     ??GUIDEMO_DemoProgBar_8: (+1)
   \   00000118   0x.... 0x....      ADR.W    R1,`?<Constant "Tank empty">`
   \   0000011C   0x4640             MOV      R0,R8
   \   0000011E   0x.... 0x....      BL       PROGBAR_SetText
   \   00000122   0xE00C             B.N      ??GUIDEMO_DemoProgBar_9
   \                     ??GUIDEMO_DemoProgBar_10: (+1)
   \   00000124   0x4639             MOV      R1,R7
   \   00000126   0x4640             MOV      R0,R8
   \   00000128   0x.... 0x....      BL       PROGBAR_SetValue
   \   0000012C   0xF1C7 0x01C8      RSB      R1,R7,#+200
   \   00000130   0x4628             MOV      R0,R5
   \   00000132   0x.... 0x....      BL       PROGBAR_SetValue
   \   00000136   0x2005             MOVS     R0,#+5
   \   00000138   0x.... 0x....      BL       GUI_Delay
   \   0000013C   0x1E7F             SUBS     R7,R7,#+1
   \                     ??GUIDEMO_DemoProgBar_9: (+1)
   \   0000013E   0x2F00             CMP      R7,#+0
   \   00000140   0xD403             BMI.N    ??GUIDEMO_DemoProgBar_11
   \   00000142   0x.... 0x....      BL       GUIDEMO_CheckCancel
   \   00000146   0x2800             CMP      R0,#+0
   \   00000148   0xD0EC             BEQ.N    ??GUIDEMO_DemoProgBar_10
   \                     ??GUIDEMO_DemoProgBar_11: (+1)
   \   0000014A   0x.... 0x....      ADR.W    R1,`?<Constant "Any text ...">`
   \   0000014E   0x4640             MOV      R0,R8
   \   00000150   0x.... 0x....      BL       PROGBAR_SetText
   \   00000154   0x2100             MOVS     R1,#+0
   \   00000156   0x4640             MOV      R0,R8
   \   00000158   0x.... 0x....      BL       PROGBAR_SetTextAlign
   \   0000015C   0xE00C             B.N      ??GUIDEMO_DemoProgBar_12
   \                     ??GUIDEMO_DemoProgBar_13: (+1)
   \   0000015E   0x4639             MOV      R1,R7
   \   00000160   0x4640             MOV      R0,R8
   \   00000162   0x.... 0x....      BL       PROGBAR_SetValue
   \   00000166   0xF107 0x01C8      ADD      R1,R7,#+200
   \   0000016A   0x4628             MOV      R0,R5
   \   0000016C   0x.... 0x....      BL       PROGBAR_SetValue
   \   00000170   0x2005             MOVS     R0,#+5
   \   00000172   0x.... 0x....      BL       GUI_Delay
   \   00000176   0x1C7F             ADDS     R7,R7,#+1
   \                     ??GUIDEMO_DemoProgBar_12: (+1)
   \   00000178   0x2F65             CMP      R7,#+101
   \   0000017A   0xDA03             BGE.N    ??GUIDEMO_DemoProgBar_14
   \   0000017C   0x.... 0x....      BL       GUIDEMO_CheckCancel
   \   00000180   0x2800             CMP      R0,#+0
   \   00000182   0xD0EC             BEQ.N    ??GUIDEMO_DemoProgBar_13
   \                     ??GUIDEMO_DemoProgBar_14: (+1)
   \   00000184   0x2F00             CMP      R7,#+0
   \   00000186   0xD411             BMI.N    ??GUIDEMO_DemoProgBar_15
   \   00000188   0x.... 0x....      BL       GUIDEMO_CheckCancel
   \   0000018C   0x2800             CMP      R0,#+0
   \   0000018E   0xD10D             BNE.N    ??GUIDEMO_DemoProgBar_15
   \   00000190   0x4639             MOV      R1,R7
   \   00000192   0x4640             MOV      R0,R8
   \   00000194   0x.... 0x....      BL       PROGBAR_SetValue
   \   00000198   0xF5C7 0x71C8      RSB      R1,R7,#+400
   \   0000019C   0x4628             MOV      R0,R5
   \   0000019E   0x.... 0x....      BL       PROGBAR_SetValue
   \   000001A2   0x2005             MOVS     R0,#+5
   \   000001A4   0x.... 0x....      BL       GUI_Delay
   \   000001A8   0x1E7F             SUBS     R7,R7,#+1
   \   000001AA   0xE7EB             B.N      ??GUIDEMO_DemoProgBar_14
   \                     ??GUIDEMO_DemoProgBar_15: (+1)
   \   000001AC   0x....             LDR.N    R1,??DataTable6_1
   \   000001AE   0x4640             MOV      R0,R8
   \   000001B0   0x.... 0x....      BL       PROGBAR_SetFont
   \   000001B4   0x.... 0x....      ADR.W    R1,`?<Constant "Any font ...">`
   \   000001B8   0x4640             MOV      R0,R8
   \   000001BA   0x.... 0x....      BL       PROGBAR_SetText
   \   000001BE   0xE77B             B.N      ??GUIDEMO_DemoProgBar_3
    135            }
    136            GUIDEMO_Delay(1000);
   \                     ??GUIDEMO_DemoProgBar_5: (+1)
   \   000001C0   0xF44F 0x707A      MOV      R0,#+1000
   \   000001C4   0x.... 0x....      BL       GUIDEMO_Delay
    137            PROGBAR_Delete(ahProgBar[0]);
   \   000001C8   0x4640             MOV      R0,R8
   \   000001CA   0x.... 0x....      BL       WM_DeleteWindow
    138            PROGBAR_Delete(ahProgBar[1]);
   \   000001CE   0x4628             MOV      R0,R5
   \   000001D0   0x.... 0x....      BL       WM_DeleteWindow
    139            GUIDEMO_Delay(1000);
   \   000001D4   0xF44F 0x707A      MOV      R0,#+1000
   \   000001D8   0x.... 0x....      BL       GUIDEMO_Delay
    140            GUI_SetFont(&GUI_Font10S_ASCII);
   \   000001DC   0x....             LDR.N    R0,??DataTable6_2
   \   000001DE   0xE8BD 0x43F2      POP      {R1,R4-R9,LR}
   \   000001E2   0x.... 0x....      B.W      GUI_SetFont
    141          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     GUI_Font8x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     GUI_FontComic18B_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     GUI_Font10S_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Widgets">`:
   \   00000000   0x57 0x69          DC8 "Widgets"
   \              0x64 0x67    
   \              0x65 0x74    
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nProgressbars in\\nall ...">`:
   \   00000000   0x0A 0x50          DC8 "\012Progressbars in\012all variations"
   \              0x72 0x6F    
   \              0x67 0x72    
   \              0x65 0x73    
   \              0x73 0x62    
   \              0x61 0x72    
   \              0x73 0x20    
   \              0x69 0x6E    
   \              0x0A 0x61    
   \              0x6C 0x6C    
   \              0x20 0x76    
   \              0x61 0x72    
   \              0x69 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x73 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Progress bar">`:
   \   00000000   0x50 0x72          DC8 "Progress bar"
   \              0x6F 0x67    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x62    
   \              0x61 0x72    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tank empty">`:
   \   00000000   0x54 0x61          DC8 "Tank empty"
   \              0x6E 0x6B    
   \              0x20 0x65    
   \              0x6D 0x70    
   \              0x74 0x79    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Any text ...">`:
   \   00000000   0x41 0x6E          DC8 "Any text ..."
   \              0x79 0x20    
   \              0x74 0x65    
   \              0x78 0x74    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Any font ...">`:
   \   00000000   0x41 0x6E          DC8 "Any font ..."
   \              0x79 0x20    
   \              0x66 0x6F    
   \              0x6E 0x74    
   \              0x20 0x2E    
   \              0x2E 0x2E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    142          
    143          #elif defined(NC30) || defined(NC308)
    144          
    145          void GUIDEMO_ProgBar(void) {}
    146          
    147          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   GUIDEMO_DemoProgBar
        32   -> GUIDEMO_CheckCancel
        32   -> GUIDEMO_Delay
        32   -> GUIDEMO_ShowIntro
        32   -> GUI_Clear
        32   -> GUI_Delay
        32   -> GUI_DispStringHCenterAt
        32   -> GUI_SetColor
         0   -> GUI_SetFont
        32   -> GUI_SetFont
        32   -> LCD_GetXSize
        32   -> LCD_GetYSize
        32   -> PROGBAR_Create
        32   -> PROGBAR_SetBarColor
        32   -> PROGBAR_SetFont
        32   -> PROGBAR_SetMinMax
        32   -> PROGBAR_SetText
        32   -> PROGBAR_SetTextAlign
        32   -> PROGBAR_SetValue
        32   -> WM_DeleteWindow


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "Any font ...">
      16  ?<Constant "Any text ...">
      16  ?<Constant "Progress bar">
      12  ?<Constant "Tank empty">
       8  ?<Constant "Widgets">
      32  ?<Constant "\nProgressbars in\nall ...">
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
     486  GUIDEMO_DemoProgBar

 
 598 bytes in section .text
 
 598 bytes of CODE memory

Errors: none
Warnings: none
